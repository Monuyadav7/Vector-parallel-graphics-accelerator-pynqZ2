ARM GAS  /tmp/cc9mxTR7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/main.d -MF .dep/main.o.d -MP -MQ code/main.o -D__USES_INITFINI__
  21              	@ -D RUN_FROM_FLASH=1 code/main.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip code/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  23              	@ -fomit-frame-pointer -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  30              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  31              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  32              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  33              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  34              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  35              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  36              	@ -freg-struct-return -fsched-critical-path-heuristic
  37              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  38              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  39              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  40              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  42              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  43              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  47              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.global	SW_REGS
  53              		.data
  54              		.align	2
  55              		.type	SW_REGS, %object
  56              		.size	SW_REGS, 4
  57              	SW_REGS:
ARM GAS  /tmp/cc9mxTR7.s 			page 2


  58 0000 00000040 		.word	1073741824
  59              		.global	PIX_REGS
  60              		.align	2
  61              		.type	PIX_REGS, %object
  62              		.size	PIX_REGS, 4
  63              	PIX_REGS:
  64 0004 00000050 		.word	1342177280
  65              		.text
  66              		.align	2
  67              		.global	write_pix
  68              		.code	16
  69              		.thumb_func
  70              		.type	write_pix, %function
  71              	write_pix:
  72              	.LFB0:
  73              		.file 1 "code/main.c"
   1:code/main.c   **** #define __MAIN_C__
   2:code/main.c   **** 
   3:code/main.c   **** #include <stdint.h>
   4:code/main.c   **** #include <stdbool.h>
   5:code/main.c   **** 
   6:code/main.c   **** 
   7:code/main.c   **** // Define the raw base address values for the i/o devices
   8:code/main.c   **** 
   9:code/main.c   **** #define AHB_SW_BASE                             0x40000000
  10:code/main.c   **** #define AHB_PIX_BASE                            0x50000000
  11:code/main.c   **** 
  12:code/main.c   **** // Define pointers with correct type for access to 32-bit i/o devices
  13:code/main.c   **** volatile uint16_t* SW_REGS = (volatile uint16_t*) AHB_SW_BASE;
  14:code/main.c   **** volatile uint16_t* PIX_REGS = (volatile uint16_t*) AHB_PIX_BASE;
  15:code/main.c   **** 
  16:code/main.c   **** 
  17:code/main.c   **** /////////////////////////////////////////////////////////////////
  18:code/main.c   **** // Functions provided to access i/o devices
  19:code/main.c   **** ////////////////////////////////////////////////////////////////
  20:code/main.c   **** 
  21:code/main.c   **** void write_pix( int p_x, int p_y, int colour) {
  74              		.loc 1 21 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 24
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 86B0     		sub	sp, sp, #24	@,,
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 24
  82 0002 0390     		str	r0, [sp, #12]	@ p_x, p_x
  83 0004 0291     		str	r1, [sp, #8]	@ p_y, p_y
  84 0006 0192     		str	r2, [sp, #4]	@ colour, colour
  22:code/main.c   ****   int pix_address ;
  23:code/main.c   ****   pix_address = p_x + 640*p_y ;
  85              		.loc 1 23 0
  86 0008 029A     		ldr	r2, [sp, #8]	@ tmp116, p_y
  87 000a 1300     		movs	r3, r2	@ tmp117, tmp116
  88 000c 9B00     		lsls	r3, r3, #2	@ tmp117, tmp117,
  89 000e 9B18     		adds	r3, r3, r2	@ tmp117, tmp117, tmp116
  90 0010 DB01     		lsls	r3, r3, #7	@ tmp118, tmp117,
  91 0012 1A00     		movs	r2, r3	@ D.4321, tmp117
ARM GAS  /tmp/cc9mxTR7.s 			page 3


  92 0014 039B     		ldr	r3, [sp, #12]	@ tmp120, p_x
  93 0016 D318     		adds	r3, r2, r3	@ tmp119, D.4321, tmp120
  94 0018 0593     		str	r3, [sp, #20]	@ tmp119, pix_address
  24:code/main.c   ****   PIX_REGS[pix_address] = colour;
  95              		.loc 1 24 0
  96 001a 054B     		ldr	r3, .L2	@ tmp121,
  97 001c 1A68     		ldr	r2, [r3]	@ D.4322, PIX_REGS
  98 001e 059B     		ldr	r3, [sp, #20]	@ D.4323, pix_address
  99 0020 5B00     		lsls	r3, r3, #1	@ D.4323, D.4323,
 100 0022 D318     		adds	r3, r2, r3	@ D.4322, D.4322, D.4323
 101 0024 019A     		ldr	r2, [sp, #4]	@ tmp123, colour
 102 0026 92B2     		uxth	r2, r2	@ D.4324, tmp122
 103 0028 1A80     		strh	r2, [r3]	@ tmp124, *_9
  25:code/main.c   ****   }
 104              		.loc 1 25 0
 105 002a C046     		nop
 106 002c 06B0     		add	sp, sp, #24	@,,
 107              		@ sp needed	@
 108 002e 7047     		bx	lr
 109              	.L3:
 110              		.align	2
 111              	.L2:
 112 0030 00000000 		.word	PIX_REGS
 113              		.cfi_endproc
 114              	.LFE0:
 115              		.size	write_pix, .-write_pix
 116              		.align	2
 117              		.global	read_switches
 118              		.code	16
 119              		.thumb_func
 120              		.type	read_switches, %function
 121              	read_switches:
 122              	.LFB1:
  26:code/main.c   **** 
  27:code/main.c   **** // Read out (void) removed from the code because
  28:code/main.c   **** // functionality does not exist in main() 
  29:code/main.c   **** 
  30:code/main.c   **** /////////////////////////////////////////////////////////////////
  31:code/main.c   **** // Functions to interface with switches and buttons
  32:code/main.c   **** /////////////////////////////////////////////////////////////////
  33:code/main.c   **** 
  34:code/main.c   **** uint16_t read_switches(int addr) {
 123              		.loc 1 34 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0034 82B0     		sub	sp, sp, #8	@,,
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131 0036 0190     		str	r0, [sp, #4]	@ addr, addr
  35:code/main.c   **** 
  36:code/main.c   ****   return SW_REGS[addr];
 132              		.loc 1 36 0
 133 0038 044B     		ldr	r3, .L6	@ tmp116,
 134 003a 1A68     		ldr	r2, [r3]	@ D.4325, SW_REGS
 135 003c 019B     		ldr	r3, [sp, #4]	@ D.4326, addr
ARM GAS  /tmp/cc9mxTR7.s 			page 4


 136 003e 5B00     		lsls	r3, r3, #1	@ D.4326, D.4326,
 137 0040 D318     		adds	r3, r2, r3	@ D.4325, D.4325, D.4326
 138 0042 1B88     		ldrh	r3, [r3]	@ tmp117, *_6
 139 0044 9BB2     		uxth	r3, r3	@ D.4327, tmp117
  37:code/main.c   **** 
  38:code/main.c   **** }
 140              		.loc 1 38 0
 141 0046 1800     		movs	r0, r3	@, <retval>
 142 0048 02B0     		add	sp, sp, #8	@,,
 143              		@ sp needed	@
 144 004a 7047     		bx	lr
 145              	.L7:
 146              		.align	2
 147              	.L6:
 148 004c 00000000 		.word	SW_REGS
 149              		.cfi_endproc
 150              	.LFE1:
 151              		.size	read_switches, .-read_switches
 152              		.align	2
 153              		.global	check_switches
 154              		.code	16
 155              		.thumb_func
 156              		.type	check_switches, %function
 157              	check_switches:
 158              	.LFB2:
  39:code/main.c   **** 
  40:code/main.c   **** bool check_switches(int addr) {
 159              		.loc 1 40 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 16
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0050 84B0     		sub	sp, sp, #16	@,,
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 16
 167 0052 0190     		str	r0, [sp, #4]	@ addr, addr
  41:code/main.c   **** 
  42:code/main.c   ****   int status, switches_ready;
  43:code/main.c   ****   
  44:code/main.c   ****   status = SW_REGS[2];
 168              		.loc 1 44 0
 169 0054 0A4B     		ldr	r3, .L10	@ tmp116,
 170 0056 1B68     		ldr	r3, [r3]	@ D.4328, SW_REGS
 171 0058 0433     		adds	r3, r3, #4	@ D.4328,
 172 005a 1B88     		ldrh	r3, [r3]	@ tmp117, *_3
 173 005c 9BB2     		uxth	r3, r3	@ D.4329, tmp117
 174 005e 0393     		str	r3, [sp, #12]	@ D.4329, status
  45:code/main.c   ****   
  46:code/main.c   ****   // use the addr value to select one bit of the status register
  47:code/main.c   ****   switches_ready = (status >> addr) & 1;
 175              		.loc 1 47 0
 176 0060 039A     		ldr	r2, [sp, #12]	@ tmp118, status
 177 0062 019B     		ldr	r3, [sp, #4]	@ tmp119, addr
 178 0064 1A41     		asrs	r2, r2, r3	@ tmp118, tmp118, tmp119
 179 0066 1300     		movs	r3, r2	@ D.4330, tmp118
 180 0068 0122     		movs	r2, #1	@ tmp121,
 181 006a 1340     		ands	r3, r2	@ tmp120, tmp121
ARM GAS  /tmp/cc9mxTR7.s 			page 5


 182 006c 0293     		str	r3, [sp, #8]	@ tmp120, switches_ready
  48:code/main.c   ****   
  49:code/main.c   ****   return (switches_ready == 1);
 183              		.loc 1 49 0
 184 006e 029B     		ldr	r3, [sp, #8]	@ tmp123, switches_ready
 185 0070 013B     		subs	r3, r3, #1	@ tmp125,
 186 0072 5A42     		rsbs	r2, r3, #0	@ tmp126, tmp125
 187 0074 5341     		adcs	r3, r3, r2	@ tmp124, tmp125, tmp126
 188 0076 DBB2     		uxtb	r3, r3	@ D.4331, tmp122
  50:code/main.c   **** 
  51:code/main.c   **** }
 189              		.loc 1 51 0
 190 0078 1800     		movs	r0, r3	@, <retval>
 191 007a 04B0     		add	sp, sp, #16	@,,
 192              		@ sp needed	@
 193 007c 7047     		bx	lr
 194              	.L11:
 195 007e C046     		.align	2
 196              	.L10:
 197 0080 00000000 		.word	SW_REGS
 198              		.cfi_endproc
 199              	.LFE2:
 200              		.size	check_switches, .-check_switches
 201              		.align	2
 202              		.global	wait_for_any_switch_data
 203              		.code	16
 204              		.thumb_func
 205              		.type	wait_for_any_switch_data, %function
 206              	wait_for_any_switch_data:
 207              	.LFB3:
  52:code/main.c   **** 
  53:code/main.c   **** void wait_for_any_switch_data(void) {
 208              		.loc 1 53 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
  54:code/main.c   **** 
  55:code/main.c   ****   // this is a 'busy wait'
  56:code/main.c   **** 
  57:code/main.c   ****   //  ( it should only be used if there is nothing
  58:code/main.c   ****   //   else for the embedded system to do )
  59:code/main.c   **** 
  60:code/main.c   ****   while ( SW_REGS[2] == 0 );
 213              		.loc 1 60 0
 214 0084 C046     		nop
 215              	.L13:
 216              		.loc 1 60 0 is_stmt 0 discriminator 1
 217 0086 044B     		ldr	r3, .L15	@ tmp113,
 218 0088 1B68     		ldr	r3, [r3]	@ D.4332, SW_REGS
 219 008a 0433     		adds	r3, r3, #4	@ D.4332,
 220 008c 1B88     		ldrh	r3, [r3]	@ tmp114, *_3
 221 008e 9BB2     		uxth	r3, r3	@ D.4333, tmp114
 222 0090 002B     		cmp	r3, #0	@ D.4333,
 223 0092 F8D0     		beq	.L13	@,
  61:code/main.c   ****   
  62:code/main.c   ****   return;
ARM GAS  /tmp/cc9mxTR7.s 			page 6


 224              		.loc 1 62 0 is_stmt 1
 225 0094 C046     		nop
  63:code/main.c   **** 
  64:code/main.c   **** }
 226              		.loc 1 64 0
 227              		@ sp needed	@
 228 0096 7047     		bx	lr
 229              	.L16:
 230              		.align	2
 231              	.L15:
 232 0098 00000000 		.word	SW_REGS
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	wait_for_any_switch_data, .-wait_for_any_switch_data
 236              		.align	2
 237              		.global	main
 238              		.code	16
 239              		.thumb_func
 240              		.type	main, %function
 241              	main:
 242              	.LFB4:
  65:code/main.c   **** //////////////////////////////////////////////////////////////////
  66:code/main.c   **** // Main Function
  67:code/main.c   **** //////////////////////////////////////////////////////////////////
  68:code/main.c   **** int main(void) {
 243              		.loc 1 68 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 56
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 009c 00B5     		push	{lr}	@
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
 251 009e 8FB0     		sub	sp, sp, #60	@,,
 252              	.LCFI4:
 253              		.cfi_def_cfa_offset 64
 254              	.L24:
 255              	.LBB2:
  69:code/main.c   **** 
  70:code/main.c   ****   
  71:code/main.c   ****   
  72:code/main.c   **** while(1) {
  73:code/main.c   ****   int x1 = 0 ;
 256              		.loc 1 73 0
 257 00a0 0023     		movs	r3, #0	@ tmp139,
 258 00a2 0B93     		str	r3, [sp, #44]	@ tmp139, x1
  74:code/main.c   ****   int y1 = 0 ;
 259              		.loc 1 74 0
 260 00a4 0023     		movs	r3, #0	@ tmp140,
 261 00a6 0A93     		str	r3, [sp, #40]	@ tmp140, y1
  75:code/main.c   ****   
  76:code/main.c   ****  
  77:code/main.c   ****   int x2 = 50;
 262              		.loc 1 77 0
 263 00a8 3223     		movs	r3, #50	@ tmp141,
 264 00aa 0993     		str	r3, [sp, #36]	@ tmp141, x2
  78:code/main.c   ****   int y2 = 30;
ARM GAS  /tmp/cc9mxTR7.s 			page 7


 265              		.loc 1 78 0
 266 00ac 1E23     		movs	r3, #30	@ tmp142,
 267 00ae 0893     		str	r3, [sp, #32]	@ tmp142, y2
  79:code/main.c   ****   
  80:code/main.c   ****   int x3 = 50;
 268              		.loc 1 80 0
 269 00b0 3223     		movs	r3, #50	@ tmp143,
 270 00b2 0793     		str	r3, [sp, #28]	@ tmp143, x3
  81:code/main.c   ****   int y3 = 70;
 271              		.loc 1 81 0
 272 00b4 4623     		movs	r3, #70	@ tmp144,
 273 00b6 0693     		str	r3, [sp, #24]	@ tmp144, y3
 274              	.LBB3:
  82:code/main.c   ****   
  83:code/main.c   ****   
  84:code/main.c   ****   int L1_detT ;
  85:code/main.c   ****   int L2_detT ;
  86:code/main.c   ****   int detT ;
  87:code/main.c   ****   
  88:code/main.c   ****   int L1_positive, L2_positive, L3_positive ;
  89:code/main.c   ****   
  90:code/main.c   **** for (int x = 0 ; x < 640 ; x++){
 275              		.loc 1 90 0
 276 00b8 0023     		movs	r3, #0	@ tmp145,
 277 00ba 0D93     		str	r3, [sp, #52]	@ tmp145, x
 278 00bc 72E0     		b	.L18	@
 279              	.L23:
 280              	.LBB4:
  91:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 281              		.loc 1 91 0
 282 00be 0023     		movs	r3, #0	@ tmp146,
 283 00c0 0C93     		str	r3, [sp, #48]	@ tmp146, y
 284 00c2 67E0     		b	.L19	@
 285              	.L22:
  92:code/main.c   ****     
  93:code/main.c   **** 	  L1_detT   =   ((y2-y3) *  (x-x3)) + ((x3-x2) *  (y-y3)) ;
 286              		.loc 1 93 0
 287 00c4 089A     		ldr	r2, [sp, #32]	@ tmp147, y2
 288 00c6 069B     		ldr	r3, [sp, #24]	@ tmp148, y3
 289 00c8 D31A     		subs	r3, r2, r3	@ D.4334, tmp147, tmp148
 290 00ca 0D99     		ldr	r1, [sp, #52]	@ tmp149, x
 291 00cc 079A     		ldr	r2, [sp, #28]	@ tmp150, x3
 292 00ce 8A1A     		subs	r2, r1, r2	@ D.4334, tmp149, tmp150
 293 00d0 5A43     		muls	r2, r3	@ D.4334, D.4334
 294 00d2 0799     		ldr	r1, [sp, #28]	@ tmp151, x3
 295 00d4 099B     		ldr	r3, [sp, #36]	@ tmp152, x2
 296 00d6 CB1A     		subs	r3, r1, r3	@ D.4334, tmp151, tmp152
 297 00d8 0C98     		ldr	r0, [sp, #48]	@ tmp153, y
 298 00da 0699     		ldr	r1, [sp, #24]	@ tmp154, y3
 299 00dc 411A     		subs	r1, r0, r1	@ D.4334, tmp153, tmp154
 300 00de 4B43     		muls	r3, r1	@ D.4334, D.4334
 301 00e0 D318     		adds	r3, r2, r3	@ tmp155, D.4334, D.4334
 302 00e2 0593     		str	r3, [sp, #20]	@ tmp155, L1_detT
  94:code/main.c   **** 	  L2_detT   =   ((y3-y1) *  (x-x3)) + ((x1-x3) *  (y-y3)) ;
 303              		.loc 1 94 0
 304 00e4 069A     		ldr	r2, [sp, #24]	@ tmp156, y3
 305 00e6 0A9B     		ldr	r3, [sp, #40]	@ tmp157, y1
ARM GAS  /tmp/cc9mxTR7.s 			page 8


 306 00e8 D31A     		subs	r3, r2, r3	@ D.4334, tmp156, tmp157
 307 00ea 0D99     		ldr	r1, [sp, #52]	@ tmp158, x
 308 00ec 079A     		ldr	r2, [sp, #28]	@ tmp159, x3
 309 00ee 8A1A     		subs	r2, r1, r2	@ D.4334, tmp158, tmp159
 310 00f0 5A43     		muls	r2, r3	@ D.4334, D.4334
 311 00f2 0B99     		ldr	r1, [sp, #44]	@ tmp160, x1
 312 00f4 079B     		ldr	r3, [sp, #28]	@ tmp161, x3
 313 00f6 CB1A     		subs	r3, r1, r3	@ D.4334, tmp160, tmp161
 314 00f8 0C98     		ldr	r0, [sp, #48]	@ tmp162, y
 315 00fa 0699     		ldr	r1, [sp, #24]	@ tmp163, y3
 316 00fc 411A     		subs	r1, r0, r1	@ D.4334, tmp162, tmp163
 317 00fe 4B43     		muls	r3, r1	@ D.4334, D.4334
 318 0100 D318     		adds	r3, r2, r3	@ tmp164, D.4334, D.4334
 319 0102 0493     		str	r3, [sp, #16]	@ tmp164, L2_detT
  95:code/main.c   ****    	  detT      =   ((y2-y3) * (x1-x3)) + ((x3-x2) * (y1-y3)) ;
 320              		.loc 1 95 0
 321 0104 089A     		ldr	r2, [sp, #32]	@ tmp165, y2
 322 0106 069B     		ldr	r3, [sp, #24]	@ tmp166, y3
 323 0108 D31A     		subs	r3, r2, r3	@ D.4334, tmp165, tmp166
 324 010a 0B99     		ldr	r1, [sp, #44]	@ tmp167, x1
 325 010c 079A     		ldr	r2, [sp, #28]	@ tmp168, x3
 326 010e 8A1A     		subs	r2, r1, r2	@ D.4334, tmp167, tmp168
 327 0110 5A43     		muls	r2, r3	@ D.4334, D.4334
 328 0112 0799     		ldr	r1, [sp, #28]	@ tmp169, x3
 329 0114 099B     		ldr	r3, [sp, #36]	@ tmp170, x2
 330 0116 CB1A     		subs	r3, r1, r3	@ D.4334, tmp169, tmp170
 331 0118 0A98     		ldr	r0, [sp, #40]	@ tmp171, y1
 332 011a 0699     		ldr	r1, [sp, #24]	@ tmp172, y3
 333 011c 411A     		subs	r1, r0, r1	@ D.4334, tmp171, tmp172
 334 011e 4B43     		muls	r3, r1	@ D.4334, D.4334
 335 0120 D318     		adds	r3, r2, r3	@ tmp173, D.4334, D.4334
 336 0122 0393     		str	r3, [sp, #12]	@ tmp173, detT
  96:code/main.c   **** 	   
  97:code/main.c   ****    	  L1_positive = ((L1_detT >= 0) == (detT >= 0)) ;
 337              		.loc 1 97 0
 338 0124 059B     		ldr	r3, [sp, #20]	@ tmp176, L1_detT
 339 0126 DB0F     		lsrs	r3, r3, #31	@ tmp175, tmp176,
 340 0128 DAB2     		uxtb	r2, r3	@ D.4335, tmp175
 341 012a 039B     		ldr	r3, [sp, #12]	@ tmp179, detT
 342 012c DB43     		mvns	r3, r3	@ tmp178, tmp179
 343 012e DB0F     		lsrs	r3, r3, #31	@ tmp180, tmp178,
 344 0130 DBB2     		uxtb	r3, r3	@ D.4335, tmp180
 345 0132 5340     		eors	r3, r2	@ tmp181, D.4335
 346 0134 DBB2     		uxtb	r3, r3	@ D.4335, tmp181
 347 0136 0293     		str	r3, [sp, #8]	@ D.4335, L1_positive
  98:code/main.c   **** 	  L2_positive = ((L2_detT >= 0) == (detT >= 0)) ;
 348              		.loc 1 98 0
 349 0138 049B     		ldr	r3, [sp, #16]	@ tmp184, L2_detT
 350 013a DB0F     		lsrs	r3, r3, #31	@ tmp183, tmp184,
 351 013c DAB2     		uxtb	r2, r3	@ D.4335, tmp183
 352 013e 039B     		ldr	r3, [sp, #12]	@ tmp187, detT
 353 0140 DB43     		mvns	r3, r3	@ tmp186, tmp187
 354 0142 DB0F     		lsrs	r3, r3, #31	@ tmp188, tmp186,
 355 0144 DBB2     		uxtb	r3, r3	@ D.4335, tmp188
 356 0146 5340     		eors	r3, r2	@ tmp189, D.4335
 357 0148 DBB2     		uxtb	r3, r3	@ D.4335, tmp189
 358 014a 0193     		str	r3, [sp, #4]	@ D.4335, L2_positive
ARM GAS  /tmp/cc9mxTR7.s 			page 9


  99:code/main.c   **** 	  L3_positive = (((L1_detT + L2_detT) <= detT) == (detT >= 0)) ;
 359              		.loc 1 99 0
 360 014c 059A     		ldr	r2, [sp, #20]	@ tmp190, L1_detT
 361 014e 049B     		ldr	r3, [sp, #16]	@ tmp191, L2_detT
 362 0150 D218     		adds	r2, r2, r3	@ D.4334, tmp190, tmp191
 363 0152 0123     		movs	r3, #1	@ tmp195,
 364 0154 191C     		adds	r1, r3, #0	@ tmp192, tmp195
 365 0156 039B     		ldr	r3, [sp, #12]	@ tmp196, detT
 366 0158 9A42     		cmp	r2, r3	@ D.4334, tmp196
 367 015a 01DC     		bgt	.L20	@,
 368 015c 0023     		movs	r3, #0	@ tmp197,
 369 015e 191C     		adds	r1, r3, #0	@ tmp192, tmp197
 370              	.L20:
 371 0160 CAB2     		uxtb	r2, r1	@ D.4335, tmp192
 372 0162 039B     		ldr	r3, [sp, #12]	@ tmp200, detT
 373 0164 DB43     		mvns	r3, r3	@ tmp199, tmp200
 374 0166 DB0F     		lsrs	r3, r3, #31	@ tmp201, tmp199,
 375 0168 DBB2     		uxtb	r3, r3	@ D.4335, tmp201
 376 016a 5340     		eors	r3, r2	@ tmp202, D.4335
 377 016c DBB2     		uxtb	r3, r3	@ D.4335, tmp202
 378 016e 0093     		str	r3, [sp]	@ D.4335, L3_positive
 100:code/main.c   **** 	  
 101:code/main.c   **** 	  
 102:code/main.c   **** 	  if(L1_positive && L2_positive && L3_positive)
 379              		.loc 1 102 0
 380 0170 029B     		ldr	r3, [sp, #8]	@ tmp203, L1_positive
 381 0172 002B     		cmp	r3, #0	@ tmp203,
 382 0174 0BD0     		beq	.L21	@,
 383              		.loc 1 102 0 is_stmt 0 discriminator 1
 384 0176 019B     		ldr	r3, [sp, #4]	@ tmp204, L2_positive
 385 0178 002B     		cmp	r3, #0	@ tmp204,
 386 017a 08D0     		beq	.L21	@,
 387              		.loc 1 102 0 discriminator 2
 388 017c 009B     		ldr	r3, [sp]	@ tmp205, L3_positive
 389 017e 002B     		cmp	r3, #0	@ tmp205,
 390 0180 05D0     		beq	.L21	@,
 103:code/main.c   ****         	write_pix(x,y,1);
 391              		.loc 1 103 0 is_stmt 1
 392 0182 0C99     		ldr	r1, [sp, #48]	@ tmp206, y
 393 0184 0D9B     		ldr	r3, [sp, #52]	@ tmp207, x
 394 0186 0122     		movs	r2, #1	@,
 395 0188 1800     		movs	r0, r3	@, tmp207
 396 018a FFF7FEFF 		bl	write_pix	@
 397              	.L21:
  91:code/main.c   ****     
 398              		.loc 1 91 0 discriminator 2
 399 018e 0C9B     		ldr	r3, [sp, #48]	@ tmp209, y
 400 0190 0133     		adds	r3, r3, #1	@ tmp208,
 401 0192 0C93     		str	r3, [sp, #48]	@ tmp208, y
 402              	.L19:
  91:code/main.c   ****     
 403              		.loc 1 91 0 is_stmt 0 discriminator 1
 404 0194 0C9A     		ldr	r2, [sp, #48]	@ tmp210, y
 405 0196 E023     		movs	r3, #224	@ tmp216,
 406 0198 FF33     		adds	r3, r3, #255	@ tmp211,
 407 019a 9A42     		cmp	r2, r3	@ tmp210, tmp211
 408 019c 92DD     		ble	.L22	@,
ARM GAS  /tmp/cc9mxTR7.s 			page 10


 409              	.LBE4:
  90:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 410              		.loc 1 90 0 is_stmt 1 discriminator 2
 411 019e 0D9B     		ldr	r3, [sp, #52]	@ tmp213, x
 412 01a0 0133     		adds	r3, r3, #1	@ tmp212,
 413 01a2 0D93     		str	r3, [sp, #52]	@ tmp212, x
 414              	.L18:
  90:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 415              		.loc 1 90 0 is_stmt 0 discriminator 1
 416 01a4 0D9B     		ldr	r3, [sp, #52]	@ tmp214, x
 417 01a6 024A     		ldr	r2, .L25	@ tmp215,
 418 01a8 9342     		cmp	r3, r2	@ tmp214, tmp215
 419 01aa 88DD     		ble	.L23	@,
 420              	.LBE3:
 421              	.LBE2:
 104:code/main.c   **** 
 105:code/main.c   ****   		} 
 106:code/main.c   **** 	}
 107:code/main.c   **** 
 108:code/main.c   ****    }
 422              		.loc 1 108 0 is_stmt 1
 423 01ac 78E7     		b	.L24	@
 424              	.L26:
 425 01ae C046     		.align	2
 426              	.L25:
 427 01b0 7F020000 		.word	639
 428              		.cfi_endproc
 429              	.LFE4:
 430              		.size	main, .-main
 431              	.Letext0:
 432              		.file 2 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 433              		.file 3 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 434              		.section	.debug_info,"",%progbits
 435              	.Ldebug_info0:
 436 0000 89020000 		.4byte	0x289
 437 0004 0200     		.2byte	0x2
 438 0006 00000000 		.4byte	.Ldebug_abbrev0
 439 000a 04       		.byte	0x4
 440 000b 01       		.uleb128 0x1
 441 000c A0000000 		.4byte	.LASF28
 442 0010 0C       		.byte	0xc
 443 0011 BA010000 		.4byte	.LASF29
 444 0015 2E000000 		.4byte	.LASF30
 445 0019 00000000 		.4byte	.Ltext0
 446 001d B4010000 		.4byte	.Letext0
 447 0021 00000000 		.4byte	.Ldebug_line0
 448 0025 02       		.uleb128 0x2
 449 0026 01       		.byte	0x1
 450 0027 06       		.byte	0x6
 451 0028 F2010000 		.4byte	.LASF0
 452 002c 02       		.uleb128 0x2
 453 002d 01       		.byte	0x1
 454 002e 08       		.byte	0x8
 455 002f 24010000 		.4byte	.LASF1
 456 0033 02       		.uleb128 0x2
 457 0034 02       		.byte	0x2
 458 0035 05       		.byte	0x5
ARM GAS  /tmp/cc9mxTR7.s 			page 11


 459 0036 CE010000 		.4byte	.LASF2
 460 003a 03       		.uleb128 0x3
 461 003b 6C010000 		.4byte	.LASF9
 462 003f 02       		.byte	0x2
 463 0040 2B       		.byte	0x2b
 464 0041 45000000 		.4byte	0x45
 465 0045 02       		.uleb128 0x2
 466 0046 02       		.byte	0x2
 467 0047 07       		.byte	0x7
 468 0048 44010000 		.4byte	.LASF3
 469 004c 02       		.uleb128 0x2
 470 004d 04       		.byte	0x4
 471 004e 05       		.byte	0x5
 472 004f E1010000 		.4byte	.LASF4
 473 0053 02       		.uleb128 0x2
 474 0054 04       		.byte	0x4
 475 0055 07       		.byte	0x7
 476 0056 32010000 		.4byte	.LASF5
 477 005a 02       		.uleb128 0x2
 478 005b 08       		.byte	0x8
 479 005c 05       		.byte	0x5
 480 005d AC010000 		.4byte	.LASF6
 481 0061 02       		.uleb128 0x2
 482 0062 08       		.byte	0x8
 483 0063 07       		.byte	0x7
 484 0064 95010000 		.4byte	.LASF7
 485 0068 04       		.uleb128 0x4
 486 0069 04       		.byte	0x4
 487 006a 05       		.byte	0x5
 488 006b 696E7400 		.ascii	"int\000"
 489 006f 02       		.uleb128 0x2
 490 0070 04       		.byte	0x4
 491 0071 07       		.byte	0x7
 492 0072 88010000 		.4byte	.LASF8
 493 0076 03       		.uleb128 0x3
 494 0077 D8010000 		.4byte	.LASF10
 495 007b 03       		.byte	0x3
 496 007c 24       		.byte	0x24
 497 007d 3A000000 		.4byte	0x3a
 498 0081 05       		.uleb128 0x5
 499 0082 01       		.byte	0x1
 500 0083 56000000 		.4byte	.LASF31
 501 0087 01       		.byte	0x1
 502 0088 15       		.byte	0x15
 503 0089 01       		.byte	0x1
 504 008a 00000000 		.4byte	.LFB0
 505 008e 34000000 		.4byte	.LFE0
 506 0092 00000000 		.4byte	.LLST0
 507 0096 01       		.byte	0x1
 508 0097 D4000000 		.4byte	0xd4
 509 009b 06       		.uleb128 0x6
 510 009c 705F7800 		.ascii	"p_x\000"
 511 00a0 01       		.byte	0x1
 512 00a1 15       		.byte	0x15
 513 00a2 68000000 		.4byte	0x68
 514 00a6 02       		.byte	0x2
 515 00a7 91       		.byte	0x91
ARM GAS  /tmp/cc9mxTR7.s 			page 12


 516 00a8 74       		.sleb128 -12
 517 00a9 06       		.uleb128 0x6
 518 00aa 705F7900 		.ascii	"p_y\000"
 519 00ae 01       		.byte	0x1
 520 00af 15       		.byte	0x15
 521 00b0 68000000 		.4byte	0x68
 522 00b4 02       		.byte	0x2
 523 00b5 91       		.byte	0x91
 524 00b6 70       		.sleb128 -16
 525 00b7 07       		.uleb128 0x7
 526 00b8 7C010000 		.4byte	.LASF11
 527 00bc 01       		.byte	0x1
 528 00bd 15       		.byte	0x15
 529 00be 68000000 		.4byte	0x68
 530 00c2 02       		.byte	0x2
 531 00c3 91       		.byte	0x91
 532 00c4 6C       		.sleb128 -20
 533 00c5 08       		.uleb128 0x8
 534 00c6 00000000 		.4byte	.LASF15
 535 00ca 01       		.byte	0x1
 536 00cb 16       		.byte	0x16
 537 00cc 68000000 		.4byte	0x68
 538 00d0 02       		.byte	0x2
 539 00d1 91       		.byte	0x91
 540 00d2 7C       		.sleb128 -4
 541 00d3 00       		.byte	0
 542 00d4 09       		.uleb128 0x9
 543 00d5 01       		.byte	0x1
 544 00d6 0C000000 		.4byte	.LASF13
 545 00da 01       		.byte	0x1
 546 00db 22       		.byte	0x22
 547 00dc 01       		.byte	0x1
 548 00dd 76000000 		.4byte	0x76
 549 00e1 34000000 		.4byte	.LFB1
 550 00e5 50000000 		.4byte	.LFE1
 551 00e9 20000000 		.4byte	.LLST1
 552 00ed 01       		.byte	0x1
 553 00ee 01010000 		.4byte	0x101
 554 00f2 07       		.uleb128 0x7
 555 00f3 8F000000 		.4byte	.LASF12
 556 00f7 01       		.byte	0x1
 557 00f8 22       		.byte	0x22
 558 00f9 68000000 		.4byte	0x68
 559 00fd 02       		.byte	0x2
 560 00fe 91       		.byte	0x91
 561 00ff 7C       		.sleb128 -4
 562 0100 00       		.byte	0
 563 0101 09       		.uleb128 0x9
 564 0102 01       		.byte	0x1
 565 0103 67000000 		.4byte	.LASF14
 566 0107 01       		.byte	0x1
 567 0108 28       		.byte	0x28
 568 0109 01       		.byte	0x1
 569 010a 4A010000 		.4byte	0x14a
 570 010e 50000000 		.4byte	.LFB2
 571 0112 84000000 		.4byte	.LFE2
 572 0116 40000000 		.4byte	.LLST2
ARM GAS  /tmp/cc9mxTR7.s 			page 13


 573 011a 01       		.byte	0x1
 574 011b 4A010000 		.4byte	0x14a
 575 011f 07       		.uleb128 0x7
 576 0120 8F000000 		.4byte	.LASF12
 577 0124 01       		.byte	0x1
 578 0125 28       		.byte	0x28
 579 0126 68000000 		.4byte	0x68
 580 012a 02       		.byte	0x2
 581 012b 91       		.byte	0x91
 582 012c 74       		.sleb128 -12
 583 012d 08       		.uleb128 0x8
 584 012e 60000000 		.4byte	.LASF16
 585 0132 01       		.byte	0x1
 586 0133 2A       		.byte	0x2a
 587 0134 68000000 		.4byte	0x68
 588 0138 02       		.byte	0x2
 589 0139 91       		.byte	0x91
 590 013a 7C       		.sleb128 -4
 591 013b 08       		.uleb128 0x8
 592 013c FE010000 		.4byte	.LASF17
 593 0140 01       		.byte	0x1
 594 0141 2A       		.byte	0x2a
 595 0142 68000000 		.4byte	0x68
 596 0146 02       		.byte	0x2
 597 0147 91       		.byte	0x91
 598 0148 78       		.sleb128 -8
 599 0149 00       		.byte	0
 600 014a 02       		.uleb128 0x2
 601 014b 01       		.byte	0x1
 602 014c 02       		.byte	0x2
 603 014d 0D020000 		.4byte	.LASF18
 604 0151 0A       		.uleb128 0xa
 605 0152 01       		.byte	0x1
 606 0153 76000000 		.4byte	.LASF32
 607 0157 01       		.byte	0x1
 608 0158 35       		.byte	0x35
 609 0159 01       		.byte	0x1
 610 015a 84000000 		.4byte	.LFB3
 611 015e 9C000000 		.4byte	.LFE3
 612 0162 02       		.byte	0x2
 613 0163 7D       		.byte	0x7d
 614 0164 00       		.sleb128 0
 615 0165 01       		.byte	0x1
 616 0166 0B       		.uleb128 0xb
 617 0167 01       		.byte	0x1
 618 0168 77010000 		.4byte	.LASF19
 619 016c 01       		.byte	0x1
 620 016d 44       		.byte	0x44
 621 016e 01       		.byte	0x1
 622 016f 68000000 		.4byte	0x68
 623 0173 9C000000 		.4byte	.LFB4
 624 0177 B4010000 		.4byte	.LFE4
 625 017b 60000000 		.4byte	.LLST3
 626 017f 01       		.byte	0x1
 627 0180 5D020000 		.4byte	0x25d
 628 0184 0C       		.uleb128 0xc
 629 0185 A0000000 		.4byte	.LBB2
ARM GAS  /tmp/cc9mxTR7.s 			page 14


 630 0189 AC010000 		.4byte	.LBE2
 631 018d 0D       		.uleb128 0xd
 632 018e 783100   		.ascii	"x1\000"
 633 0191 01       		.byte	0x1
 634 0192 49       		.byte	0x49
 635 0193 68000000 		.4byte	0x68
 636 0197 02       		.byte	0x2
 637 0198 91       		.byte	0x91
 638 0199 6C       		.sleb128 -20
 639 019a 0D       		.uleb128 0xd
 640 019b 793100   		.ascii	"y1\000"
 641 019e 01       		.byte	0x1
 642 019f 4A       		.byte	0x4a
 643 01a0 68000000 		.4byte	0x68
 644 01a4 02       		.byte	0x2
 645 01a5 91       		.byte	0x91
 646 01a6 68       		.sleb128 -24
 647 01a7 0D       		.uleb128 0xd
 648 01a8 783200   		.ascii	"x2\000"
 649 01ab 01       		.byte	0x1
 650 01ac 4D       		.byte	0x4d
 651 01ad 68000000 		.4byte	0x68
 652 01b1 02       		.byte	0x2
 653 01b2 91       		.byte	0x91
 654 01b3 64       		.sleb128 -28
 655 01b4 0D       		.uleb128 0xd
 656 01b5 793200   		.ascii	"y2\000"
 657 01b8 01       		.byte	0x1
 658 01b9 4E       		.byte	0x4e
 659 01ba 68000000 		.4byte	0x68
 660 01be 02       		.byte	0x2
 661 01bf 91       		.byte	0x91
 662 01c0 60       		.sleb128 -32
 663 01c1 0D       		.uleb128 0xd
 664 01c2 783300   		.ascii	"x3\000"
 665 01c5 01       		.byte	0x1
 666 01c6 50       		.byte	0x50
 667 01c7 68000000 		.4byte	0x68
 668 01cb 02       		.byte	0x2
 669 01cc 91       		.byte	0x91
 670 01cd 5C       		.sleb128 -36
 671 01ce 0D       		.uleb128 0xd
 672 01cf 793300   		.ascii	"y3\000"
 673 01d2 01       		.byte	0x1
 674 01d3 51       		.byte	0x51
 675 01d4 68000000 		.4byte	0x68
 676 01d8 02       		.byte	0x2
 677 01d9 91       		.byte	0x91
 678 01da 58       		.sleb128 -40
 679 01db 08       		.uleb128 0x8
 680 01dc C6010000 		.4byte	.LASF20
 681 01e0 01       		.byte	0x1
 682 01e1 54       		.byte	0x54
 683 01e2 68000000 		.4byte	0x68
 684 01e6 02       		.byte	0x2
 685 01e7 91       		.byte	0x91
 686 01e8 54       		.sleb128 -44
ARM GAS  /tmp/cc9mxTR7.s 			page 15


 687 01e9 08       		.uleb128 0x8
 688 01ea 1A000000 		.4byte	.LASF21
 689 01ee 01       		.byte	0x1
 690 01ef 55       		.byte	0x55
 691 01f0 68000000 		.4byte	0x68
 692 01f4 02       		.byte	0x2
 693 01f5 91       		.byte	0x91
 694 01f6 50       		.sleb128 -48
 695 01f7 08       		.uleb128 0x8
 696 01f8 83010000 		.4byte	.LASF22
 697 01fc 01       		.byte	0x1
 698 01fd 56       		.byte	0x56
 699 01fe 68000000 		.4byte	0x68
 700 0202 02       		.byte	0x2
 701 0203 91       		.byte	0x91
 702 0204 4C       		.sleb128 -52
 703 0205 08       		.uleb128 0x8
 704 0206 60010000 		.4byte	.LASF23
 705 020a 01       		.byte	0x1
 706 020b 58       		.byte	0x58
 707 020c 68000000 		.4byte	0x68
 708 0210 02       		.byte	0x2
 709 0211 91       		.byte	0x91
 710 0212 48       		.sleb128 -56
 711 0213 08       		.uleb128 0x8
 712 0214 94000000 		.4byte	.LASF24
 713 0218 01       		.byte	0x1
 714 0219 58       		.byte	0x58
 715 021a 68000000 		.4byte	0x68
 716 021e 02       		.byte	0x2
 717 021f 91       		.byte	0x91
 718 0220 44       		.sleb128 -60
 719 0221 08       		.uleb128 0x8
 720 0222 22000000 		.4byte	.LASF25
 721 0226 01       		.byte	0x1
 722 0227 58       		.byte	0x58
 723 0228 68000000 		.4byte	0x68
 724 022c 02       		.byte	0x2
 725 022d 91       		.byte	0x91
 726 022e 40       		.sleb128 -64
 727 022f 0C       		.uleb128 0xc
 728 0230 B8000000 		.4byte	.LBB3
 729 0234 AC010000 		.4byte	.LBE3
 730 0238 0D       		.uleb128 0xd
 731 0239 7800     		.ascii	"x\000"
 732 023b 01       		.byte	0x1
 733 023c 5A       		.byte	0x5a
 734 023d 68000000 		.4byte	0x68
 735 0241 02       		.byte	0x2
 736 0242 91       		.byte	0x91
 737 0243 74       		.sleb128 -12
 738 0244 0C       		.uleb128 0xc
 739 0245 BE000000 		.4byte	.LBB4
 740 0249 9E010000 		.4byte	.LBE4
 741 024d 0D       		.uleb128 0xd
 742 024e 7900     		.ascii	"y\000"
 743 0250 01       		.byte	0x1
ARM GAS  /tmp/cc9mxTR7.s 			page 16


 744 0251 5B       		.byte	0x5b
 745 0252 68000000 		.4byte	0x68
 746 0256 02       		.byte	0x2
 747 0257 91       		.byte	0x91
 748 0258 70       		.sleb128 -16
 749 0259 00       		.byte	0
 750 025a 00       		.byte	0
 751 025b 00       		.byte	0
 752 025c 00       		.byte	0
 753 025d 0E       		.uleb128 0xe
 754 025e EA010000 		.4byte	.LASF26
 755 0262 01       		.byte	0x1
 756 0263 0D       		.byte	0xd
 757 0264 6F020000 		.4byte	0x26f
 758 0268 01       		.byte	0x1
 759 0269 05       		.byte	0x5
 760 026a 03       		.byte	0x3
 761 026b 00000000 		.4byte	SW_REGS
 762 026f 0F       		.uleb128 0xf
 763 0270 04       		.byte	0x4
 764 0271 75020000 		.4byte	0x275
 765 0275 10       		.uleb128 0x10
 766 0276 76000000 		.4byte	0x76
 767 027a 0E       		.uleb128 0xe
 768 027b 57010000 		.4byte	.LASF27
 769 027f 01       		.byte	0x1
 770 0280 0E       		.byte	0xe
 771 0281 6F020000 		.4byte	0x26f
 772 0285 01       		.byte	0x1
 773 0286 05       		.byte	0x5
 774 0287 03       		.byte	0x3
 775 0288 00000000 		.4byte	PIX_REGS
 776 028c 00       		.byte	0
 777              		.section	.debug_abbrev,"",%progbits
 778              	.Ldebug_abbrev0:
 779 0000 01       		.uleb128 0x1
 780 0001 11       		.uleb128 0x11
 781 0002 01       		.byte	0x1
 782 0003 25       		.uleb128 0x25
 783 0004 0E       		.uleb128 0xe
 784 0005 13       		.uleb128 0x13
 785 0006 0B       		.uleb128 0xb
 786 0007 03       		.uleb128 0x3
 787 0008 0E       		.uleb128 0xe
 788 0009 1B       		.uleb128 0x1b
 789 000a 0E       		.uleb128 0xe
 790 000b 11       		.uleb128 0x11
 791 000c 01       		.uleb128 0x1
 792 000d 12       		.uleb128 0x12
 793 000e 01       		.uleb128 0x1
 794 000f 10       		.uleb128 0x10
 795 0010 06       		.uleb128 0x6
 796 0011 00       		.byte	0
 797 0012 00       		.byte	0
 798 0013 02       		.uleb128 0x2
 799 0014 24       		.uleb128 0x24
 800 0015 00       		.byte	0
ARM GAS  /tmp/cc9mxTR7.s 			page 17


 801 0016 0B       		.uleb128 0xb
 802 0017 0B       		.uleb128 0xb
 803 0018 3E       		.uleb128 0x3e
 804 0019 0B       		.uleb128 0xb
 805 001a 03       		.uleb128 0x3
 806 001b 0E       		.uleb128 0xe
 807 001c 00       		.byte	0
 808 001d 00       		.byte	0
 809 001e 03       		.uleb128 0x3
 810 001f 16       		.uleb128 0x16
 811 0020 00       		.byte	0
 812 0021 03       		.uleb128 0x3
 813 0022 0E       		.uleb128 0xe
 814 0023 3A       		.uleb128 0x3a
 815 0024 0B       		.uleb128 0xb
 816 0025 3B       		.uleb128 0x3b
 817 0026 0B       		.uleb128 0xb
 818 0027 49       		.uleb128 0x49
 819 0028 13       		.uleb128 0x13
 820 0029 00       		.byte	0
 821 002a 00       		.byte	0
 822 002b 04       		.uleb128 0x4
 823 002c 24       		.uleb128 0x24
 824 002d 00       		.byte	0
 825 002e 0B       		.uleb128 0xb
 826 002f 0B       		.uleb128 0xb
 827 0030 3E       		.uleb128 0x3e
 828 0031 0B       		.uleb128 0xb
 829 0032 03       		.uleb128 0x3
 830 0033 08       		.uleb128 0x8
 831 0034 00       		.byte	0
 832 0035 00       		.byte	0
 833 0036 05       		.uleb128 0x5
 834 0037 2E       		.uleb128 0x2e
 835 0038 01       		.byte	0x1
 836 0039 3F       		.uleb128 0x3f
 837 003a 0C       		.uleb128 0xc
 838 003b 03       		.uleb128 0x3
 839 003c 0E       		.uleb128 0xe
 840 003d 3A       		.uleb128 0x3a
 841 003e 0B       		.uleb128 0xb
 842 003f 3B       		.uleb128 0x3b
 843 0040 0B       		.uleb128 0xb
 844 0041 27       		.uleb128 0x27
 845 0042 0C       		.uleb128 0xc
 846 0043 11       		.uleb128 0x11
 847 0044 01       		.uleb128 0x1
 848 0045 12       		.uleb128 0x12
 849 0046 01       		.uleb128 0x1
 850 0047 40       		.uleb128 0x40
 851 0048 06       		.uleb128 0x6
 852 0049 9742     		.uleb128 0x2117
 853 004b 0C       		.uleb128 0xc
 854 004c 01       		.uleb128 0x1
 855 004d 13       		.uleb128 0x13
 856 004e 00       		.byte	0
 857 004f 00       		.byte	0
ARM GAS  /tmp/cc9mxTR7.s 			page 18


 858 0050 06       		.uleb128 0x6
 859 0051 05       		.uleb128 0x5
 860 0052 00       		.byte	0
 861 0053 03       		.uleb128 0x3
 862 0054 08       		.uleb128 0x8
 863 0055 3A       		.uleb128 0x3a
 864 0056 0B       		.uleb128 0xb
 865 0057 3B       		.uleb128 0x3b
 866 0058 0B       		.uleb128 0xb
 867 0059 49       		.uleb128 0x49
 868 005a 13       		.uleb128 0x13
 869 005b 02       		.uleb128 0x2
 870 005c 0A       		.uleb128 0xa
 871 005d 00       		.byte	0
 872 005e 00       		.byte	0
 873 005f 07       		.uleb128 0x7
 874 0060 05       		.uleb128 0x5
 875 0061 00       		.byte	0
 876 0062 03       		.uleb128 0x3
 877 0063 0E       		.uleb128 0xe
 878 0064 3A       		.uleb128 0x3a
 879 0065 0B       		.uleb128 0xb
 880 0066 3B       		.uleb128 0x3b
 881 0067 0B       		.uleb128 0xb
 882 0068 49       		.uleb128 0x49
 883 0069 13       		.uleb128 0x13
 884 006a 02       		.uleb128 0x2
 885 006b 0A       		.uleb128 0xa
 886 006c 00       		.byte	0
 887 006d 00       		.byte	0
 888 006e 08       		.uleb128 0x8
 889 006f 34       		.uleb128 0x34
 890 0070 00       		.byte	0
 891 0071 03       		.uleb128 0x3
 892 0072 0E       		.uleb128 0xe
 893 0073 3A       		.uleb128 0x3a
 894 0074 0B       		.uleb128 0xb
 895 0075 3B       		.uleb128 0x3b
 896 0076 0B       		.uleb128 0xb
 897 0077 49       		.uleb128 0x49
 898 0078 13       		.uleb128 0x13
 899 0079 02       		.uleb128 0x2
 900 007a 0A       		.uleb128 0xa
 901 007b 00       		.byte	0
 902 007c 00       		.byte	0
 903 007d 09       		.uleb128 0x9
 904 007e 2E       		.uleb128 0x2e
 905 007f 01       		.byte	0x1
 906 0080 3F       		.uleb128 0x3f
 907 0081 0C       		.uleb128 0xc
 908 0082 03       		.uleb128 0x3
 909 0083 0E       		.uleb128 0xe
 910 0084 3A       		.uleb128 0x3a
 911 0085 0B       		.uleb128 0xb
 912 0086 3B       		.uleb128 0x3b
 913 0087 0B       		.uleb128 0xb
 914 0088 27       		.uleb128 0x27
ARM GAS  /tmp/cc9mxTR7.s 			page 19


 915 0089 0C       		.uleb128 0xc
 916 008a 49       		.uleb128 0x49
 917 008b 13       		.uleb128 0x13
 918 008c 11       		.uleb128 0x11
 919 008d 01       		.uleb128 0x1
 920 008e 12       		.uleb128 0x12
 921 008f 01       		.uleb128 0x1
 922 0090 40       		.uleb128 0x40
 923 0091 06       		.uleb128 0x6
 924 0092 9742     		.uleb128 0x2117
 925 0094 0C       		.uleb128 0xc
 926 0095 01       		.uleb128 0x1
 927 0096 13       		.uleb128 0x13
 928 0097 00       		.byte	0
 929 0098 00       		.byte	0
 930 0099 0A       		.uleb128 0xa
 931 009a 2E       		.uleb128 0x2e
 932 009b 00       		.byte	0
 933 009c 3F       		.uleb128 0x3f
 934 009d 0C       		.uleb128 0xc
 935 009e 03       		.uleb128 0x3
 936 009f 0E       		.uleb128 0xe
 937 00a0 3A       		.uleb128 0x3a
 938 00a1 0B       		.uleb128 0xb
 939 00a2 3B       		.uleb128 0x3b
 940 00a3 0B       		.uleb128 0xb
 941 00a4 27       		.uleb128 0x27
 942 00a5 0C       		.uleb128 0xc
 943 00a6 11       		.uleb128 0x11
 944 00a7 01       		.uleb128 0x1
 945 00a8 12       		.uleb128 0x12
 946 00a9 01       		.uleb128 0x1
 947 00aa 40       		.uleb128 0x40
 948 00ab 0A       		.uleb128 0xa
 949 00ac 9742     		.uleb128 0x2117
 950 00ae 0C       		.uleb128 0xc
 951 00af 00       		.byte	0
 952 00b0 00       		.byte	0
 953 00b1 0B       		.uleb128 0xb
 954 00b2 2E       		.uleb128 0x2e
 955 00b3 01       		.byte	0x1
 956 00b4 3F       		.uleb128 0x3f
 957 00b5 0C       		.uleb128 0xc
 958 00b6 03       		.uleb128 0x3
 959 00b7 0E       		.uleb128 0xe
 960 00b8 3A       		.uleb128 0x3a
 961 00b9 0B       		.uleb128 0xb
 962 00ba 3B       		.uleb128 0x3b
 963 00bb 0B       		.uleb128 0xb
 964 00bc 27       		.uleb128 0x27
 965 00bd 0C       		.uleb128 0xc
 966 00be 49       		.uleb128 0x49
 967 00bf 13       		.uleb128 0x13
 968 00c0 11       		.uleb128 0x11
 969 00c1 01       		.uleb128 0x1
 970 00c2 12       		.uleb128 0x12
 971 00c3 01       		.uleb128 0x1
ARM GAS  /tmp/cc9mxTR7.s 			page 20


 972 00c4 40       		.uleb128 0x40
 973 00c5 06       		.uleb128 0x6
 974 00c6 9642     		.uleb128 0x2116
 975 00c8 0C       		.uleb128 0xc
 976 00c9 01       		.uleb128 0x1
 977 00ca 13       		.uleb128 0x13
 978 00cb 00       		.byte	0
 979 00cc 00       		.byte	0
 980 00cd 0C       		.uleb128 0xc
 981 00ce 0B       		.uleb128 0xb
 982 00cf 01       		.byte	0x1
 983 00d0 11       		.uleb128 0x11
 984 00d1 01       		.uleb128 0x1
 985 00d2 12       		.uleb128 0x12
 986 00d3 01       		.uleb128 0x1
 987 00d4 00       		.byte	0
 988 00d5 00       		.byte	0
 989 00d6 0D       		.uleb128 0xd
 990 00d7 34       		.uleb128 0x34
 991 00d8 00       		.byte	0
 992 00d9 03       		.uleb128 0x3
 993 00da 08       		.uleb128 0x8
 994 00db 3A       		.uleb128 0x3a
 995 00dc 0B       		.uleb128 0xb
 996 00dd 3B       		.uleb128 0x3b
 997 00de 0B       		.uleb128 0xb
 998 00df 49       		.uleb128 0x49
 999 00e0 13       		.uleb128 0x13
 1000 00e1 02       		.uleb128 0x2
 1001 00e2 0A       		.uleb128 0xa
 1002 00e3 00       		.byte	0
 1003 00e4 00       		.byte	0
 1004 00e5 0E       		.uleb128 0xe
 1005 00e6 34       		.uleb128 0x34
 1006 00e7 00       		.byte	0
 1007 00e8 03       		.uleb128 0x3
 1008 00e9 0E       		.uleb128 0xe
 1009 00ea 3A       		.uleb128 0x3a
 1010 00eb 0B       		.uleb128 0xb
 1011 00ec 3B       		.uleb128 0x3b
 1012 00ed 0B       		.uleb128 0xb
 1013 00ee 49       		.uleb128 0x49
 1014 00ef 13       		.uleb128 0x13
 1015 00f0 3F       		.uleb128 0x3f
 1016 00f1 0C       		.uleb128 0xc
 1017 00f2 02       		.uleb128 0x2
 1018 00f3 0A       		.uleb128 0xa
 1019 00f4 00       		.byte	0
 1020 00f5 00       		.byte	0
 1021 00f6 0F       		.uleb128 0xf
 1022 00f7 0F       		.uleb128 0xf
 1023 00f8 00       		.byte	0
 1024 00f9 0B       		.uleb128 0xb
 1025 00fa 0B       		.uleb128 0xb
 1026 00fb 49       		.uleb128 0x49
 1027 00fc 13       		.uleb128 0x13
 1028 00fd 00       		.byte	0
ARM GAS  /tmp/cc9mxTR7.s 			page 21


 1029 00fe 00       		.byte	0
 1030 00ff 10       		.uleb128 0x10
 1031 0100 35       		.uleb128 0x35
 1032 0101 00       		.byte	0
 1033 0102 49       		.uleb128 0x49
 1034 0103 13       		.uleb128 0x13
 1035 0104 00       		.byte	0
 1036 0105 00       		.byte	0
 1037 0106 00       		.byte	0
 1038              		.section	.debug_loc,"",%progbits
 1039              	.Ldebug_loc0:
 1040              	.LLST0:
 1041 0000 00000000 		.4byte	.LFB0-.Ltext0
 1042 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1043 0008 0200     		.2byte	0x2
 1044 000a 7D       		.byte	0x7d
 1045 000b 00       		.sleb128 0
 1046 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1047 0010 34000000 		.4byte	.LFE0-.Ltext0
 1048 0014 0200     		.2byte	0x2
 1049 0016 7D       		.byte	0x7d
 1050 0017 18       		.sleb128 24
 1051 0018 00000000 		.4byte	0
 1052 001c 00000000 		.4byte	0
 1053              	.LLST1:
 1054 0020 34000000 		.4byte	.LFB1-.Ltext0
 1055 0024 36000000 		.4byte	.LCFI1-.Ltext0
 1056 0028 0200     		.2byte	0x2
 1057 002a 7D       		.byte	0x7d
 1058 002b 00       		.sleb128 0
 1059 002c 36000000 		.4byte	.LCFI1-.Ltext0
 1060 0030 50000000 		.4byte	.LFE1-.Ltext0
 1061 0034 0200     		.2byte	0x2
 1062 0036 7D       		.byte	0x7d
 1063 0037 08       		.sleb128 8
 1064 0038 00000000 		.4byte	0
 1065 003c 00000000 		.4byte	0
 1066              	.LLST2:
 1067 0040 50000000 		.4byte	.LFB2-.Ltext0
 1068 0044 52000000 		.4byte	.LCFI2-.Ltext0
 1069 0048 0200     		.2byte	0x2
 1070 004a 7D       		.byte	0x7d
 1071 004b 00       		.sleb128 0
 1072 004c 52000000 		.4byte	.LCFI2-.Ltext0
 1073 0050 84000000 		.4byte	.LFE2-.Ltext0
 1074 0054 0200     		.2byte	0x2
 1075 0056 7D       		.byte	0x7d
 1076 0057 10       		.sleb128 16
 1077 0058 00000000 		.4byte	0
 1078 005c 00000000 		.4byte	0
 1079              	.LLST3:
 1080 0060 9C000000 		.4byte	.LFB4-.Ltext0
 1081 0064 9E000000 		.4byte	.LCFI3-.Ltext0
 1082 0068 0200     		.2byte	0x2
 1083 006a 7D       		.byte	0x7d
 1084 006b 00       		.sleb128 0
 1085 006c 9E000000 		.4byte	.LCFI3-.Ltext0
ARM GAS  /tmp/cc9mxTR7.s 			page 22


 1086 0070 A0000000 		.4byte	.LCFI4-.Ltext0
 1087 0074 0200     		.2byte	0x2
 1088 0076 7D       		.byte	0x7d
 1089 0077 04       		.sleb128 4
 1090 0078 A0000000 		.4byte	.LCFI4-.Ltext0
 1091 007c B4010000 		.4byte	.LFE4-.Ltext0
 1092 0080 0300     		.2byte	0x3
 1093 0082 7D       		.byte	0x7d
 1094 0083 C000     		.sleb128 64
 1095 0085 00000000 		.4byte	0
 1096 0089 00000000 		.4byte	0
 1097              		.section	.debug_aranges,"",%progbits
 1098 0000 1C000000 		.4byte	0x1c
 1099 0004 0200     		.2byte	0x2
 1100 0006 00000000 		.4byte	.Ldebug_info0
 1101 000a 04       		.byte	0x4
 1102 000b 00       		.byte	0
 1103 000c 0000     		.2byte	0
 1104 000e 0000     		.2byte	0
 1105 0010 00000000 		.4byte	.Ltext0
 1106 0014 B4010000 		.4byte	.Letext0-.Ltext0
 1107 0018 00000000 		.4byte	0
 1108 001c 00000000 		.4byte	0
 1109              		.section	.debug_line,"",%progbits
 1110              	.Ldebug_line0:
 1111 0000 29010000 		.section	.debug_str,"MS",%progbits,1
 1111      0200BF00 
 1111      00000201 
 1111      FB0E0D00 
 1111      01010101 
 1112              	.LASF15:
 1113 0000 7069785F 		.ascii	"pix_address\000"
 1113      61646472 
 1113      65737300 
 1114              	.LASF13:
 1115 000c 72656164 		.ascii	"read_switches\000"
 1115      5F737769 
 1115      74636865 
 1115      7300
 1116              	.LASF21:
 1117 001a 4C325F64 		.ascii	"L2_detT\000"
 1117      65745400 
 1118              	.LASF25:
 1119 0022 4C335F70 		.ascii	"L3_positive\000"
 1119      6F736974 
 1119      69766500 
 1120              	.LASF30:
 1121 002e 2F686F6D 		.ascii	"/home/ks6n19/Documents/project/software\000"
 1121      652F6B73 
 1121      366E3139 
 1121      2F446F63 
 1121      756D656E 
 1122              	.LASF31:
 1123 0056 77726974 		.ascii	"write_pix\000"
 1123      655F7069 
 1123      7800
 1124              	.LASF16:
ARM GAS  /tmp/cc9mxTR7.s 			page 23


 1125 0060 73746174 		.ascii	"status\000"
 1125      757300
 1126              	.LASF14:
 1127 0067 63686563 		.ascii	"check_switches\000"
 1127      6B5F7377 
 1127      69746368 
 1127      657300
 1128              	.LASF32:
 1129 0076 77616974 		.ascii	"wait_for_any_switch_data\000"
 1129      5F666F72 
 1129      5F616E79 
 1129      5F737769 
 1129      7463685F 
 1130              	.LASF12:
 1131 008f 61646472 		.ascii	"addr\000"
 1131      00
 1132              	.LASF24:
 1133 0094 4C325F70 		.ascii	"L2_positive\000"
 1133      6F736974 
 1133      69766500 
 1134              	.LASF28:
 1135 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 1135      43313120 
 1135      352E342E 
 1135      31203230 
 1135      31363039 
 1136 00d3 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 1136      20726576 
 1136      6973696F 
 1136      6E203234 
 1136      30343936 
 1137 0106 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 1137      202D4F30 
 1137      202D666F 
 1137      6D69742D 
 1137      6672616D 
 1138              	.LASF1:
 1139 0124 756E7369 		.ascii	"unsigned char\000"
 1139      676E6564 
 1139      20636861 
 1139      7200
 1140              	.LASF5:
 1141 0132 6C6F6E67 		.ascii	"long unsigned int\000"
 1141      20756E73 
 1141      69676E65 
 1141      6420696E 
 1141      7400
 1142              	.LASF3:
 1143 0144 73686F72 		.ascii	"short unsigned int\000"
 1143      7420756E 
 1143      7369676E 
 1143      65642069 
 1143      6E7400
 1144              	.LASF27:
 1145 0157 5049585F 		.ascii	"PIX_REGS\000"
 1145      52454753 
 1145      00
ARM GAS  /tmp/cc9mxTR7.s 			page 24


 1146              	.LASF23:
 1147 0160 4C315F70 		.ascii	"L1_positive\000"
 1147      6F736974 
 1147      69766500 
 1148              	.LASF9:
 1149 016c 5F5F7569 		.ascii	"__uint16_t\000"
 1149      6E743136 
 1149      5F7400
 1150              	.LASF19:
 1151 0177 6D61696E 		.ascii	"main\000"
 1151      00
 1152              	.LASF11:
 1153 017c 636F6C6F 		.ascii	"colour\000"
 1153      757200
 1154              	.LASF22:
 1155 0183 64657454 		.ascii	"detT\000"
 1155      00
 1156              	.LASF8:
 1157 0188 756E7369 		.ascii	"unsigned int\000"
 1157      676E6564 
 1157      20696E74 
 1157      00
 1158              	.LASF7:
 1159 0195 6C6F6E67 		.ascii	"long long unsigned int\000"
 1159      206C6F6E 
 1159      6720756E 
 1159      7369676E 
 1159      65642069 
 1160              	.LASF6:
 1161 01ac 6C6F6E67 		.ascii	"long long int\000"
 1161      206C6F6E 
 1161      6720696E 
 1161      7400
 1162              	.LASF29:
 1163 01ba 636F6465 		.ascii	"code/main.c\000"
 1163      2F6D6169 
 1163      6E2E6300 
 1164              	.LASF20:
 1165 01c6 4C315F64 		.ascii	"L1_detT\000"
 1165      65745400 
 1166              	.LASF2:
 1167 01ce 73686F72 		.ascii	"short int\000"
 1167      7420696E 
 1167      7400
 1168              	.LASF10:
 1169 01d8 75696E74 		.ascii	"uint16_t\000"
 1169      31365F74 
 1169      00
 1170              	.LASF4:
 1171 01e1 6C6F6E67 		.ascii	"long int\000"
 1171      20696E74 
 1171      00
 1172              	.LASF26:
 1173 01ea 53575F52 		.ascii	"SW_REGS\000"
 1173      45475300 
 1174              	.LASF0:
 1175 01f2 7369676E 		.ascii	"signed char\000"
ARM GAS  /tmp/cc9mxTR7.s 			page 25


 1175      65642063 
 1175      68617200 
 1176              	.LASF17:
 1177 01fe 73776974 		.ascii	"switches_ready\000"
 1177      63686573 
 1177      5F726561 
 1177      647900
 1178              	.LASF18:
 1179 020d 5F426F6F 		.ascii	"_Bool\000"
 1179      6C00
 1180              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc9mxTR7.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc9mxTR7.s:57     .data:00000000 SW_REGS
     /tmp/cc9mxTR7.s:54     .data:00000000 $d
     /tmp/cc9mxTR7.s:63     .data:00000004 PIX_REGS
     /tmp/cc9mxTR7.s:66     .text:00000000 $t
     /tmp/cc9mxTR7.s:71     .text:00000000 write_pix
     /tmp/cc9mxTR7.s:112    .text:00000030 $d
     /tmp/cc9mxTR7.s:116    .text:00000034 $t
     /tmp/cc9mxTR7.s:121    .text:00000034 read_switches
     /tmp/cc9mxTR7.s:148    .text:0000004c $d
     /tmp/cc9mxTR7.s:152    .text:00000050 $t
     /tmp/cc9mxTR7.s:157    .text:00000050 check_switches
     /tmp/cc9mxTR7.s:197    .text:00000080 $d
     /tmp/cc9mxTR7.s:201    .text:00000084 $t
     /tmp/cc9mxTR7.s:206    .text:00000084 wait_for_any_switch_data
     /tmp/cc9mxTR7.s:232    .text:00000098 $d
     /tmp/cc9mxTR7.s:236    .text:0000009c $t
     /tmp/cc9mxTR7.s:241    .text:0000009c main
     /tmp/cc9mxTR7.s:427    .text:000001b0 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
