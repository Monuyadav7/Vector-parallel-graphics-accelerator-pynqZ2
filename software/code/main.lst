ARM GAS  /tmp/cc521Km5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   5              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   6              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   7              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
   8              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
   9              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  10              		.eabi_attribute 30, 6	@ Tag_ABI_optimization_goals
  11              		.eabi_attribute 34, 0	@ Tag_CPU_unaligned_access
  12              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  13              		.file	"main.c"
  14              	@ GNU C11 (GNU Tools for ARM Embedded Processors) version 5.4.1 20160919 (release) [ARM/embedded-5-
  15              	@	compiled by GNU C version 4.7.4, GMP version 4.3.2, MPFR version 2.4.2, MPC version 0.8.1
  16              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  17              	@ options passed:  -I . -I ./inc -imultilib armv6-m
  18              	@ -iprefix /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../lib/gcc/arm-none-eabi/5.4.1/
  19              	@ -isysroot /srv/gcc-arm-none-eabi-5_4-2016q3/bin/../arm-none-eabi
  20              	@ -MD code/main.d -MF .dep/main.o.d -MP -MQ code/main.o -D__USES_INITFINI__
  21              	@ -D RUN_FROM_FLASH=1 code/main.c -mcpu=cortex-m0 -mthumb
  22              	@ -auxbase-strip code/main.o -gdwarf-2 -O0 -Wall -Wstrict-prototypes
  23              	@ -fomit-frame-pointer -fverbose-asm
  24              	@ options enabled:  -faggressive-loop-optimizations -fauto-inc-dec
  25              	@ -fchkp-check-incomplete-type -fchkp-check-read -fchkp-check-write
  26              	@ -fchkp-instrument-calls -fchkp-narrow-bounds -fchkp-optimize
  27              	@ -fchkp-store-bounds -fchkp-use-static-bounds
  28              	@ -fchkp-use-static-const-bounds -fchkp-use-wrappers -fcommon
  29              	@ -fdelete-null-pointer-checks -fdwarf2-cfi-asm -fearly-inlining
  30              	@ -feliminate-unused-debug-types -ffunction-cse -fgcse-lm -fgnu-runtime
  31              	@ -fgnu-unique -fident -finline-atomics -fira-hoist-pressure
  32              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  33              	@ -fkeep-static-consts -fleading-underscore -flifetime-dse
  34              	@ -flto-odr-type-merging -fmath-errno -fmerge-debug-strings
  35              	@ -fomit-frame-pointer -fpeephole -fprefetch-loop-arrays
  36              	@ -freg-struct-return -fsched-critical-path-heuristic
  37              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  38              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  39              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep
  40              	@ -fsemantic-interposition -fshow-column -fsigned-zeros
  41              	@ -fsplit-ivs-in-unroller -fstdarg-opt -fstrict-volatile-bitfields
  42              	@ -fsync-libcalls -ftrapping-math -ftree-coalesce-vars -ftree-cselim
  43              	@ -ftree-forwprop -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  44              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop
  45              	@ -ftree-reassoc -ftree-scev-cprop -funit-at-a-time -fverbose-asm
  46              	@ -fzero-initialized-in-bss -mlittle-endian -mpic-data-is-text-relative
  47              	@ -msched-prolog -mthumb -mvectorize-with-neon-quad
  48              	
  49              		.text
  50              	.Ltext0:
  51              		.cfi_sections	.debug_frame
  52              		.global	SW_REGS
  53              		.data
  54              		.align	2
  55              		.type	SW_REGS, %object
  56              		.size	SW_REGS, 4
  57              	SW_REGS:
ARM GAS  /tmp/cc521Km5.s 			page 2


  58 0000 00000040 		.word	1073741824
  59              		.global	PIX_REGS
  60              		.align	2
  61              		.type	PIX_REGS, %object
  62              		.size	PIX_REGS, 4
  63              	PIX_REGS:
  64 0004 00000050 		.word	1342177280
  65              		.text
  66              		.align	2
  67              		.global	write_pix
  68              		.code	16
  69              		.thumb_func
  70              		.type	write_pix, %function
  71              	write_pix:
  72              	.LFB0:
  73              		.file 1 "code/main.c"
   1:code/main.c   **** #define __MAIN_C__
   2:code/main.c   **** 
   3:code/main.c   **** #include <stdint.h>
   4:code/main.c   **** #include <stdbool.h>
   5:code/main.c   **** 
   6:code/main.c   **** 
   7:code/main.c   **** // Define the raw base address values for the i/o devices
   8:code/main.c   **** 
   9:code/main.c   **** #define AHB_SW_BASE                             0x40000000
  10:code/main.c   **** #define AHB_PIX_BASE                            0x50000000
  11:code/main.c   **** 
  12:code/main.c   **** // Define pointers with correct type for access to 32-bit i/o devices
  13:code/main.c   **** volatile uint16_t* SW_REGS = (volatile uint16_t*) AHB_SW_BASE;
  14:code/main.c   **** volatile uint16_t* PIX_REGS = (volatile uint16_t*) AHB_PIX_BASE;
  15:code/main.c   **** 
  16:code/main.c   **** 
  17:code/main.c   **** /////////////////////////////////////////////////////////////////
  18:code/main.c   **** // Functions provided to access i/o devices
  19:code/main.c   **** ////////////////////////////////////////////////////////////////
  20:code/main.c   **** 
  21:code/main.c   **** void write_pix( int p_x, int p_y, int colour) {
  74              		.loc 1 21 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 24
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 86B0     		sub	sp, sp, #24	@,,
  80              	.LCFI0:
  81              		.cfi_def_cfa_offset 24
  82 0002 0390     		str	r0, [sp, #12]	@ p_x, p_x
  83 0004 0291     		str	r1, [sp, #8]	@ p_y, p_y
  84 0006 0192     		str	r2, [sp, #4]	@ colour, colour
  22:code/main.c   ****   int pix_address ;
  23:code/main.c   ****   pix_address = p_x + 640*p_y ;
  85              		.loc 1 23 0
  86 0008 029A     		ldr	r2, [sp, #8]	@ tmp116, p_y
  87 000a 1300     		movs	r3, r2	@ tmp117, tmp116
  88 000c 9B00     		lsls	r3, r3, #2	@ tmp117, tmp117,
  89 000e 9B18     		adds	r3, r3, r2	@ tmp117, tmp117, tmp116
  90 0010 DB01     		lsls	r3, r3, #7	@ tmp118, tmp117,
  91 0012 1A00     		movs	r2, r3	@ D.4329, tmp117
ARM GAS  /tmp/cc521Km5.s 			page 3


  92 0014 039B     		ldr	r3, [sp, #12]	@ tmp120, p_x
  93 0016 D318     		adds	r3, r2, r3	@ tmp119, D.4329, tmp120
  94 0018 0593     		str	r3, [sp, #20]	@ tmp119, pix_address
  24:code/main.c   ****   PIX_REGS[pix_address] = colour;
  95              		.loc 1 24 0
  96 001a 054B     		ldr	r3, .L2	@ tmp121,
  97 001c 1A68     		ldr	r2, [r3]	@ D.4330, PIX_REGS
  98 001e 059B     		ldr	r3, [sp, #20]	@ D.4331, pix_address
  99 0020 5B00     		lsls	r3, r3, #1	@ D.4331, D.4331,
 100 0022 D318     		adds	r3, r2, r3	@ D.4330, D.4330, D.4331
 101 0024 019A     		ldr	r2, [sp, #4]	@ tmp123, colour
 102 0026 92B2     		uxth	r2, r2	@ D.4332, tmp122
 103 0028 1A80     		strh	r2, [r3]	@ tmp124, *_9
  25:code/main.c   ****   }
 104              		.loc 1 25 0
 105 002a C046     		nop
 106 002c 06B0     		add	sp, sp, #24	@,,
 107              		@ sp needed	@
 108 002e 7047     		bx	lr
 109              	.L3:
 110              		.align	2
 111              	.L2:
 112 0030 00000000 		.word	PIX_REGS
 113              		.cfi_endproc
 114              	.LFE0:
 115              		.size	write_pix, .-write_pix
 116              		.align	2
 117              		.global	read_switches
 118              		.code	16
 119              		.thumb_func
 120              		.type	read_switches, %function
 121              	read_switches:
 122              	.LFB1:
  26:code/main.c   **** 
  27:code/main.c   **** // Read out (void) removed from the code because
  28:code/main.c   **** // functionality does not exist in main() 
  29:code/main.c   **** 
  30:code/main.c   **** /////////////////////////////////////////////////////////////////
  31:code/main.c   **** // Functions to interface with switches and buttons
  32:code/main.c   **** /////////////////////////////////////////////////////////////////
  33:code/main.c   **** 
  34:code/main.c   **** uint16_t read_switches(int addr) {
 123              		.loc 1 34 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 8
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0034 82B0     		sub	sp, sp, #8	@,,
 129              	.LCFI1:
 130              		.cfi_def_cfa_offset 8
 131 0036 0190     		str	r0, [sp, #4]	@ addr, addr
  35:code/main.c   **** 
  36:code/main.c   ****   return SW_REGS[addr];
 132              		.loc 1 36 0
 133 0038 044B     		ldr	r3, .L6	@ tmp116,
 134 003a 1A68     		ldr	r2, [r3]	@ D.4333, SW_REGS
 135 003c 019B     		ldr	r3, [sp, #4]	@ D.4334, addr
ARM GAS  /tmp/cc521Km5.s 			page 4


 136 003e 5B00     		lsls	r3, r3, #1	@ D.4334, D.4334,
 137 0040 D318     		adds	r3, r2, r3	@ D.4333, D.4333, D.4334
 138 0042 1B88     		ldrh	r3, [r3]	@ tmp117, *_6
 139 0044 9BB2     		uxth	r3, r3	@ D.4335, tmp117
  37:code/main.c   **** 
  38:code/main.c   **** }
 140              		.loc 1 38 0
 141 0046 1800     		movs	r0, r3	@, <retval>
 142 0048 02B0     		add	sp, sp, #8	@,,
 143              		@ sp needed	@
 144 004a 7047     		bx	lr
 145              	.L7:
 146              		.align	2
 147              	.L6:
 148 004c 00000000 		.word	SW_REGS
 149              		.cfi_endproc
 150              	.LFE1:
 151              		.size	read_switches, .-read_switches
 152              		.align	2
 153              		.global	check_switches
 154              		.code	16
 155              		.thumb_func
 156              		.type	check_switches, %function
 157              	check_switches:
 158              	.LFB2:
  39:code/main.c   **** 
  40:code/main.c   **** bool check_switches(int addr) {
 159              		.loc 1 40 0
 160              		.cfi_startproc
 161              		@ args = 0, pretend = 0, frame = 16
 162              		@ frame_needed = 0, uses_anonymous_args = 0
 163              		@ link register save eliminated.
 164 0050 84B0     		sub	sp, sp, #16	@,,
 165              	.LCFI2:
 166              		.cfi_def_cfa_offset 16
 167 0052 0190     		str	r0, [sp, #4]	@ addr, addr
  41:code/main.c   **** 
  42:code/main.c   ****   int status, switches_ready;
  43:code/main.c   ****   
  44:code/main.c   ****   status = SW_REGS[2];
 168              		.loc 1 44 0
 169 0054 0A4B     		ldr	r3, .L10	@ tmp116,
 170 0056 1B68     		ldr	r3, [r3]	@ D.4336, SW_REGS
 171 0058 0433     		adds	r3, r3, #4	@ D.4336,
 172 005a 1B88     		ldrh	r3, [r3]	@ tmp117, *_3
 173 005c 9BB2     		uxth	r3, r3	@ D.4337, tmp117
 174 005e 0393     		str	r3, [sp, #12]	@ D.4337, status
  45:code/main.c   ****   
  46:code/main.c   ****   // use the addr value to select one bit of the status register
  47:code/main.c   ****   switches_ready = (status >> addr) & 1;
 175              		.loc 1 47 0
 176 0060 039A     		ldr	r2, [sp, #12]	@ tmp118, status
 177 0062 019B     		ldr	r3, [sp, #4]	@ tmp119, addr
 178 0064 1A41     		asrs	r2, r2, r3	@ tmp118, tmp118, tmp119
 179 0066 1300     		movs	r3, r2	@ D.4338, tmp118
 180 0068 0122     		movs	r2, #1	@ tmp121,
 181 006a 1340     		ands	r3, r2	@ tmp120, tmp121
ARM GAS  /tmp/cc521Km5.s 			page 5


 182 006c 0293     		str	r3, [sp, #8]	@ tmp120, switches_ready
  48:code/main.c   ****   
  49:code/main.c   ****   return (switches_ready == 1);
 183              		.loc 1 49 0
 184 006e 029B     		ldr	r3, [sp, #8]	@ tmp123, switches_ready
 185 0070 013B     		subs	r3, r3, #1	@ tmp125,
 186 0072 5A42     		rsbs	r2, r3, #0	@ tmp126, tmp125
 187 0074 5341     		adcs	r3, r3, r2	@ tmp124, tmp125, tmp126
 188 0076 DBB2     		uxtb	r3, r3	@ D.4339, tmp122
  50:code/main.c   **** 
  51:code/main.c   **** }
 189              		.loc 1 51 0
 190 0078 1800     		movs	r0, r3	@, <retval>
 191 007a 04B0     		add	sp, sp, #16	@,,
 192              		@ sp needed	@
 193 007c 7047     		bx	lr
 194              	.L11:
 195 007e C046     		.align	2
 196              	.L10:
 197 0080 00000000 		.word	SW_REGS
 198              		.cfi_endproc
 199              	.LFE2:
 200              		.size	check_switches, .-check_switches
 201              		.align	2
 202              		.global	wait_for_any_switch_data
 203              		.code	16
 204              		.thumb_func
 205              		.type	wait_for_any_switch_data, %function
 206              	wait_for_any_switch_data:
 207              	.LFB3:
  52:code/main.c   **** 
  53:code/main.c   **** void wait_for_any_switch_data(void) {
 208              		.loc 1 53 0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		@ link register save eliminated.
  54:code/main.c   **** 
  55:code/main.c   ****   // this is a 'busy wait'
  56:code/main.c   **** 
  57:code/main.c   ****   //  ( it should only be used if there is nothing
  58:code/main.c   ****   //   else for the embedded system to do )
  59:code/main.c   **** 
  60:code/main.c   ****   while ( SW_REGS[2] == 0 );
 213              		.loc 1 60 0
 214 0084 C046     		nop
 215              	.L13:
 216              		.loc 1 60 0 is_stmt 0 discriminator 1
 217 0086 044B     		ldr	r3, .L15	@ tmp113,
 218 0088 1B68     		ldr	r3, [r3]	@ D.4340, SW_REGS
 219 008a 0433     		adds	r3, r3, #4	@ D.4340,
 220 008c 1B88     		ldrh	r3, [r3]	@ tmp114, *_3
 221 008e 9BB2     		uxth	r3, r3	@ D.4341, tmp114
 222 0090 002B     		cmp	r3, #0	@ D.4341,
 223 0092 F8D0     		beq	.L13	@,
  61:code/main.c   ****   
  62:code/main.c   ****   return;
ARM GAS  /tmp/cc521Km5.s 			page 6


 224              		.loc 1 62 0 is_stmt 1
 225 0094 C046     		nop
  63:code/main.c   **** 
  64:code/main.c   **** }
 226              		.loc 1 64 0
 227              		@ sp needed	@
 228 0096 7047     		bx	lr
 229              	.L16:
 230              		.align	2
 231              	.L15:
 232 0098 00000000 		.word	SW_REGS
 233              		.cfi_endproc
 234              	.LFE3:
 235              		.size	wait_for_any_switch_data, .-wait_for_any_switch_data
 236              		.align	2
 237              		.global	main
 238              		.code	16
 239              		.thumb_func
 240              		.type	main, %function
 241              	main:
 242              	.LFB4:
  65:code/main.c   **** //////////////////////////////////////////////////////////////////
  66:code/main.c   **** // Main Function
  67:code/main.c   **** //////////////////////////////////////////////////////////////////
  68:code/main.c   **** int main(void) {
 243              		.loc 1 68 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 56
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 009c 00B5     		push	{lr}	@
 248              	.LCFI3:
 249              		.cfi_def_cfa_offset 4
 250              		.cfi_offset 14, -4
 251 009e 8FB0     		sub	sp, sp, #60	@,,
 252              	.LCFI4:
 253              		.cfi_def_cfa_offset 64
 254              	.L26:
 255              	.LBB2:
  69:code/main.c   **** 
  70:code/main.c   ****   
  71:code/main.c   ****   
  72:code/main.c   **** while(1) {
  73:code/main.c   ****   int x1 ;
  74:code/main.c   ****   int y1 = 30;
 256              		.loc 1 74 0
 257 00a0 1E23     		movs	r3, #30	@ tmp143,
 258 00a2 0C93     		str	r3, [sp, #48]	@ tmp143, y1
  75:code/main.c   ****   
  76:code/main.c   ****  
  77:code/main.c   ****   int x2 = 50;
 259              		.loc 1 77 0
 260 00a4 3223     		movs	r3, #50	@ tmp144,
 261 00a6 0993     		str	r3, [sp, #36]	@ tmp144, x2
  78:code/main.c   ****   int y2 = 300;
 262              		.loc 1 78 0
 263 00a8 9623     		movs	r3, #150	@ tmp228,
 264 00aa 5B00     		lsls	r3, r3, #1	@ tmp145, tmp228,
ARM GAS  /tmp/cc521Km5.s 			page 7


 265 00ac 0893     		str	r3, [sp, #32]	@ tmp145, y2
  79:code/main.c   ****   
  80:code/main.c   ****   int x3 = 500;
 266              		.loc 1 80 0
 267 00ae FA23     		movs	r3, #250	@ tmp229,
 268 00b0 5B00     		lsls	r3, r3, #1	@ tmp146, tmp229,
 269 00b2 0793     		str	r3, [sp, #28]	@ tmp146, x3
  81:code/main.c   ****   int y3 = 70;
 270              		.loc 1 81 0
 271 00b4 4623     		movs	r3, #70	@ tmp147,
 272 00b6 0693     		str	r3, [sp, #24]	@ tmp147, y3
  82:code/main.c   ****   
  83:code/main.c   ****   
  84:code/main.c   ****   int L1_detT ;
  85:code/main.c   ****   int L2_detT ;
  86:code/main.c   ****   int detT ;
  87:code/main.c   ****   
  88:code/main.c   ****   int L1_positive, L2_positive, L3_positive ;
  89:code/main.c   ****   
  90:code/main.c   ****    wait_for_any_switch_data();
 273              		.loc 1 90 0
 274 00b8 FFF7FEFF 		bl	wait_for_any_switch_data	@
  91:code/main.c   ****     
  92:code/main.c   ****     if ( check_switches(0) ) {
 275              		.loc 1 92 0
 276 00bc 0020     		movs	r0, #0	@,
 277 00be FFF7FEFF 		bl	check_switches	@
 278 00c2 031E     		subs	r3, r0, #0	@ tmp148,,
 279 00c4 04D0     		beq	.L18	@,
  93:code/main.c   ****       x1 =  read_switches(0) ;
 280              		.loc 1 93 0
 281 00c6 0020     		movs	r0, #0	@,
 282 00c8 FFF7FEFF 		bl	read_switches	@
 283 00cc 0300     		movs	r3, r0	@ tmp150,
 284 00ce 0D93     		str	r3, [sp, #52]	@ D.4343, x1
 285              	.L18:
  94:code/main.c   ****     }
  95:code/main.c   **** 
  96:code/main.c   ****     if ( check_switches(1) ) {
 286              		.loc 1 96 0
 287 00d0 0120     		movs	r0, #1	@,
 288 00d2 FFF7FEFF 		bl	check_switches	@
 289 00d6 031E     		subs	r3, r0, #0	@ tmp152,,
 290 00d8 04D0     		beq	.L19	@,
  97:code/main.c   ****       y1  = read_switches(1);
 291              		.loc 1 97 0
 292 00da 0120     		movs	r0, #1	@,
 293 00dc FFF7FEFF 		bl	read_switches	@
 294 00e0 0300     		movs	r3, r0	@ tmp154,
 295 00e2 0C93     		str	r3, [sp, #48]	@ D.4343, y1
 296              	.L19:
 297              	.LBB3:
  98:code/main.c   ****     }  
  99:code/main.c   **** 
 100:code/main.c   **** for (int x = 0 ; x < 640 ; x++){
 298              		.loc 1 100 0
 299 00e4 0023     		movs	r3, #0	@ tmp156,
ARM GAS  /tmp/cc521Km5.s 			page 8


 300 00e6 0B93     		str	r3, [sp, #44]	@ tmp156, x
 301 00e8 72E0     		b	.L20	@
 302              	.L25:
 303              	.LBB4:
 101:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 304              		.loc 1 101 0
 305 00ea 0023     		movs	r3, #0	@ tmp157,
 306 00ec 0A93     		str	r3, [sp, #40]	@ tmp157, y
 307 00ee 67E0     		b	.L21	@
 308              	.L24:
 102:code/main.c   ****     
 103:code/main.c   **** 	  L1_detT   =   ((y2-y3) *  (x-x3)) + ((x3-x2) *  (y-y3)) ;
 309              		.loc 1 103 0
 310 00f0 089A     		ldr	r2, [sp, #32]	@ tmp158, y2
 311 00f2 069B     		ldr	r3, [sp, #24]	@ tmp159, y3
 312 00f4 D31A     		subs	r3, r2, r3	@ D.4344, tmp158, tmp159
 313 00f6 0B99     		ldr	r1, [sp, #44]	@ tmp160, x
 314 00f8 079A     		ldr	r2, [sp, #28]	@ tmp161, x3
 315 00fa 8A1A     		subs	r2, r1, r2	@ D.4344, tmp160, tmp161
 316 00fc 5A43     		muls	r2, r3	@ D.4344, D.4344
 317 00fe 0799     		ldr	r1, [sp, #28]	@ tmp162, x3
 318 0100 099B     		ldr	r3, [sp, #36]	@ tmp163, x2
 319 0102 CB1A     		subs	r3, r1, r3	@ D.4344, tmp162, tmp163
 320 0104 0A98     		ldr	r0, [sp, #40]	@ tmp164, y
 321 0106 0699     		ldr	r1, [sp, #24]	@ tmp165, y3
 322 0108 411A     		subs	r1, r0, r1	@ D.4344, tmp164, tmp165
 323 010a 4B43     		muls	r3, r1	@ D.4344, D.4344
 324 010c D318     		adds	r3, r2, r3	@ tmp166, D.4344, D.4344
 325 010e 0593     		str	r3, [sp, #20]	@ tmp166, L1_detT
 104:code/main.c   ****     L2_detT   =   ((y3-y1) *  (x-x3)) + ((x1-x3) *  (y-y3)) ;
 326              		.loc 1 104 0
 327 0110 069A     		ldr	r2, [sp, #24]	@ tmp167, y3
 328 0112 0C9B     		ldr	r3, [sp, #48]	@ tmp168, y1
 329 0114 D31A     		subs	r3, r2, r3	@ D.4344, tmp167, tmp168
 330 0116 0B99     		ldr	r1, [sp, #44]	@ tmp169, x
 331 0118 079A     		ldr	r2, [sp, #28]	@ tmp170, x3
 332 011a 8A1A     		subs	r2, r1, r2	@ D.4344, tmp169, tmp170
 333 011c 5A43     		muls	r2, r3	@ D.4344, D.4344
 334 011e 0D99     		ldr	r1, [sp, #52]	@ tmp171, x1
 335 0120 079B     		ldr	r3, [sp, #28]	@ tmp172, x3
 336 0122 CB1A     		subs	r3, r1, r3	@ D.4344, tmp171, tmp172
 337 0124 0A98     		ldr	r0, [sp, #40]	@ tmp173, y
 338 0126 0699     		ldr	r1, [sp, #24]	@ tmp174, y3
 339 0128 411A     		subs	r1, r0, r1	@ D.4344, tmp173, tmp174
 340 012a 4B43     		muls	r3, r1	@ D.4344, D.4344
 341 012c D318     		adds	r3, r2, r3	@ tmp175, D.4344, D.4344
 342 012e 0493     		str	r3, [sp, #16]	@ tmp175, L2_detT
 105:code/main.c   ****     detT  =   	 ((y2-y3) * (x1-x3)) + ((x3-x2) * (y1-y3)) ;
 343              		.loc 1 105 0
 344 0130 089A     		ldr	r2, [sp, #32]	@ tmp176, y2
 345 0132 069B     		ldr	r3, [sp, #24]	@ tmp177, y3
 346 0134 D31A     		subs	r3, r2, r3	@ D.4344, tmp176, tmp177
 347 0136 0D99     		ldr	r1, [sp, #52]	@ tmp178, x1
 348 0138 079A     		ldr	r2, [sp, #28]	@ tmp179, x3
 349 013a 8A1A     		subs	r2, r1, r2	@ D.4344, tmp178, tmp179
 350 013c 5A43     		muls	r2, r3	@ D.4344, D.4344
 351 013e 0799     		ldr	r1, [sp, #28]	@ tmp180, x3
ARM GAS  /tmp/cc521Km5.s 			page 9


 352 0140 099B     		ldr	r3, [sp, #36]	@ tmp181, x2
 353 0142 CB1A     		subs	r3, r1, r3	@ D.4344, tmp180, tmp181
 354 0144 0C98     		ldr	r0, [sp, #48]	@ tmp182, y1
 355 0146 0699     		ldr	r1, [sp, #24]	@ tmp183, y3
 356 0148 411A     		subs	r1, r0, r1	@ D.4344, tmp182, tmp183
 357 014a 4B43     		muls	r3, r1	@ D.4344, D.4344
 358 014c D318     		adds	r3, r2, r3	@ tmp184, D.4344, D.4344
 359 014e 0393     		str	r3, [sp, #12]	@ tmp184, detT
 106:code/main.c   **** 	   
 107:code/main.c   ****     L1_positive = ((L1_detT >= 0) == (detT >= 0)) ;
 360              		.loc 1 107 0
 361 0150 059B     		ldr	r3, [sp, #20]	@ tmp187, L1_detT
 362 0152 DB0F     		lsrs	r3, r3, #31	@ tmp186, tmp187,
 363 0154 DAB2     		uxtb	r2, r3	@ D.4342, tmp186
 364 0156 039B     		ldr	r3, [sp, #12]	@ tmp190, detT
 365 0158 DB43     		mvns	r3, r3	@ tmp189, tmp190
 366 015a DB0F     		lsrs	r3, r3, #31	@ tmp191, tmp189,
 367 015c DBB2     		uxtb	r3, r3	@ D.4342, tmp191
 368 015e 5340     		eors	r3, r2	@ tmp192, D.4342
 369 0160 DBB2     		uxtb	r3, r3	@ D.4342, tmp192
 370 0162 0293     		str	r3, [sp, #8]	@ D.4342, L1_positive
 108:code/main.c   **** 	  L2_positive = ((L2_detT >= 0) == (detT >= 0)) ;
 371              		.loc 1 108 0
 372 0164 049B     		ldr	r3, [sp, #16]	@ tmp195, L2_detT
 373 0166 DB0F     		lsrs	r3, r3, #31	@ tmp194, tmp195,
 374 0168 DAB2     		uxtb	r2, r3	@ D.4342, tmp194
 375 016a 039B     		ldr	r3, [sp, #12]	@ tmp198, detT
 376 016c DB43     		mvns	r3, r3	@ tmp197, tmp198
 377 016e DB0F     		lsrs	r3, r3, #31	@ tmp199, tmp197,
 378 0170 DBB2     		uxtb	r3, r3	@ D.4342, tmp199
 379 0172 5340     		eors	r3, r2	@ tmp200, D.4342
 380 0174 DBB2     		uxtb	r3, r3	@ D.4342, tmp200
 381 0176 0193     		str	r3, [sp, #4]	@ D.4342, L2_positive
 109:code/main.c   **** 	  L3_positive = (((L1_detT + L2_detT) <= detT) == (detT >= 0)) ;
 382              		.loc 1 109 0
 383 0178 059A     		ldr	r2, [sp, #20]	@ tmp201, L1_detT
 384 017a 049B     		ldr	r3, [sp, #16]	@ tmp202, L2_detT
 385 017c D218     		adds	r2, r2, r3	@ D.4344, tmp201, tmp202
 386 017e 0123     		movs	r3, #1	@ tmp206,
 387 0180 191C     		adds	r1, r3, #0	@ tmp203, tmp206
 388 0182 039B     		ldr	r3, [sp, #12]	@ tmp207, detT
 389 0184 9A42     		cmp	r2, r3	@ D.4344, tmp207
 390 0186 01DC     		bgt	.L22	@,
 391 0188 0023     		movs	r3, #0	@ tmp208,
 392 018a 191C     		adds	r1, r3, #0	@ tmp203, tmp208
 393              	.L22:
 394 018c CAB2     		uxtb	r2, r1	@ D.4342, tmp203
 395 018e 039B     		ldr	r3, [sp, #12]	@ tmp211, detT
 396 0190 DB43     		mvns	r3, r3	@ tmp210, tmp211
 397 0192 DB0F     		lsrs	r3, r3, #31	@ tmp212, tmp210,
 398 0194 DBB2     		uxtb	r3, r3	@ D.4342, tmp212
 399 0196 5340     		eors	r3, r2	@ tmp213, D.4342
 400 0198 DBB2     		uxtb	r3, r3	@ D.4342, tmp213
 401 019a 0093     		str	r3, [sp]	@ D.4342, L3_positive
 110:code/main.c   **** 	  
 111:code/main.c   **** 	  
 112:code/main.c   **** 	  if(L1_positive && L2_positive && L3_positive)
ARM GAS  /tmp/cc521Km5.s 			page 10


 402              		.loc 1 112 0
 403 019c 029B     		ldr	r3, [sp, #8]	@ tmp214, L1_positive
 404 019e 002B     		cmp	r3, #0	@ tmp214,
 405 01a0 0BD0     		beq	.L23	@,
 406              		.loc 1 112 0 is_stmt 0 discriminator 1
 407 01a2 019B     		ldr	r3, [sp, #4]	@ tmp215, L2_positive
 408 01a4 002B     		cmp	r3, #0	@ tmp215,
 409 01a6 08D0     		beq	.L23	@,
 410              		.loc 1 112 0 discriminator 2
 411 01a8 009B     		ldr	r3, [sp]	@ tmp216, L3_positive
 412 01aa 002B     		cmp	r3, #0	@ tmp216,
 413 01ac 05D0     		beq	.L23	@,
 113:code/main.c   ****         write_pix(x,y,1);
 414              		.loc 1 113 0 is_stmt 1
 415 01ae 0A99     		ldr	r1, [sp, #40]	@ tmp217, y
 416 01b0 0B9B     		ldr	r3, [sp, #44]	@ tmp218, x
 417 01b2 0122     		movs	r2, #1	@,
 418 01b4 1800     		movs	r0, r3	@, tmp218
 419 01b6 FFF7FEFF 		bl	write_pix	@
 420              	.L23:
 101:code/main.c   ****     
 421              		.loc 1 101 0 discriminator 2
 422 01ba 0A9B     		ldr	r3, [sp, #40]	@ tmp220, y
 423 01bc 0133     		adds	r3, r3, #1	@ tmp219,
 424 01be 0A93     		str	r3, [sp, #40]	@ tmp219, y
 425              	.L21:
 101:code/main.c   ****     
 426              		.loc 1 101 0 is_stmt 0 discriminator 1
 427 01c0 0A9A     		ldr	r2, [sp, #40]	@ tmp221, y
 428 01c2 E023     		movs	r3, #224	@ tmp227,
 429 01c4 FF33     		adds	r3, r3, #255	@ tmp222,
 430 01c6 9A42     		cmp	r2, r3	@ tmp221, tmp222
 431 01c8 92DD     		ble	.L24	@,
 432              	.LBE4:
 100:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 433              		.loc 1 100 0 is_stmt 1 discriminator 2
 434 01ca 0B9B     		ldr	r3, [sp, #44]	@ tmp224, x
 435 01cc 0133     		adds	r3, r3, #1	@ tmp223,
 436 01ce 0B93     		str	r3, [sp, #44]	@ tmp223, x
 437              	.L20:
 100:code/main.c   ****     for (int y = 0 ; y < 480 ; y++) {
 438              		.loc 1 100 0 is_stmt 0 discriminator 1
 439 01d0 0B9B     		ldr	r3, [sp, #44]	@ tmp225, x
 440 01d2 024A     		ldr	r2, .L27	@ tmp226,
 441 01d4 9342     		cmp	r3, r2	@ tmp225, tmp226
 442 01d6 88DD     		ble	.L25	@,
 443              	.LBE3:
 444              	.LBE2:
 114:code/main.c   **** 
 115:code/main.c   ****   } }
 116:code/main.c   **** 
 117:code/main.c   ****  }
 445              		.loc 1 117 0 is_stmt 1
 446 01d8 62E7     		b	.L26	@
 447              	.L28:
 448 01da C046     		.align	2
 449              	.L27:
ARM GAS  /tmp/cc521Km5.s 			page 11


 450 01dc 7F020000 		.word	639
 451              		.cfi_endproc
 452              	.LFE4:
 453              		.size	main, .-main
 454              	.Letext0:
 455              		.file 2 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/machine/_default_types.h"
 456              		.file 3 "/srv/gcc-arm-none-eabi-5_4-2016q3/arm-none-eabi/include/sys/_stdint.h"
 457              		.section	.debug_info,"",%progbits
 458              	.Ldebug_info0:
 459 0000 89020000 		.4byte	0x289
 460 0004 0200     		.2byte	0x2
 461 0006 00000000 		.4byte	.Ldebug_abbrev0
 462 000a 04       		.byte	0x4
 463 000b 01       		.uleb128 0x1
 464 000c A0000000 		.4byte	.LASF28
 465 0010 0C       		.byte	0xc
 466 0011 BA010000 		.4byte	.LASF29
 467 0015 2E000000 		.4byte	.LASF30
 468 0019 00000000 		.4byte	.Ltext0
 469 001d E0010000 		.4byte	.Letext0
 470 0021 00000000 		.4byte	.Ldebug_line0
 471 0025 02       		.uleb128 0x2
 472 0026 01       		.byte	0x1
 473 0027 06       		.byte	0x6
 474 0028 F2010000 		.4byte	.LASF0
 475 002c 02       		.uleb128 0x2
 476 002d 01       		.byte	0x1
 477 002e 08       		.byte	0x8
 478 002f 24010000 		.4byte	.LASF1
 479 0033 02       		.uleb128 0x2
 480 0034 02       		.byte	0x2
 481 0035 05       		.byte	0x5
 482 0036 CE010000 		.4byte	.LASF2
 483 003a 03       		.uleb128 0x3
 484 003b 6C010000 		.4byte	.LASF9
 485 003f 02       		.byte	0x2
 486 0040 2B       		.byte	0x2b
 487 0041 45000000 		.4byte	0x45
 488 0045 02       		.uleb128 0x2
 489 0046 02       		.byte	0x2
 490 0047 07       		.byte	0x7
 491 0048 44010000 		.4byte	.LASF3
 492 004c 02       		.uleb128 0x2
 493 004d 04       		.byte	0x4
 494 004e 05       		.byte	0x5
 495 004f E1010000 		.4byte	.LASF4
 496 0053 02       		.uleb128 0x2
 497 0054 04       		.byte	0x4
 498 0055 07       		.byte	0x7
 499 0056 32010000 		.4byte	.LASF5
 500 005a 02       		.uleb128 0x2
 501 005b 08       		.byte	0x8
 502 005c 05       		.byte	0x5
 503 005d AC010000 		.4byte	.LASF6
 504 0061 02       		.uleb128 0x2
 505 0062 08       		.byte	0x8
 506 0063 07       		.byte	0x7
ARM GAS  /tmp/cc521Km5.s 			page 12


 507 0064 95010000 		.4byte	.LASF7
 508 0068 04       		.uleb128 0x4
 509 0069 04       		.byte	0x4
 510 006a 05       		.byte	0x5
 511 006b 696E7400 		.ascii	"int\000"
 512 006f 02       		.uleb128 0x2
 513 0070 04       		.byte	0x4
 514 0071 07       		.byte	0x7
 515 0072 88010000 		.4byte	.LASF8
 516 0076 03       		.uleb128 0x3
 517 0077 D8010000 		.4byte	.LASF10
 518 007b 03       		.byte	0x3
 519 007c 24       		.byte	0x24
 520 007d 3A000000 		.4byte	0x3a
 521 0081 05       		.uleb128 0x5
 522 0082 01       		.byte	0x1
 523 0083 56000000 		.4byte	.LASF31
 524 0087 01       		.byte	0x1
 525 0088 15       		.byte	0x15
 526 0089 01       		.byte	0x1
 527 008a 00000000 		.4byte	.LFB0
 528 008e 34000000 		.4byte	.LFE0
 529 0092 00000000 		.4byte	.LLST0
 530 0096 01       		.byte	0x1
 531 0097 D4000000 		.4byte	0xd4
 532 009b 06       		.uleb128 0x6
 533 009c 705F7800 		.ascii	"p_x\000"
 534 00a0 01       		.byte	0x1
 535 00a1 15       		.byte	0x15
 536 00a2 68000000 		.4byte	0x68
 537 00a6 02       		.byte	0x2
 538 00a7 91       		.byte	0x91
 539 00a8 74       		.sleb128 -12
 540 00a9 06       		.uleb128 0x6
 541 00aa 705F7900 		.ascii	"p_y\000"
 542 00ae 01       		.byte	0x1
 543 00af 15       		.byte	0x15
 544 00b0 68000000 		.4byte	0x68
 545 00b4 02       		.byte	0x2
 546 00b5 91       		.byte	0x91
 547 00b6 70       		.sleb128 -16
 548 00b7 07       		.uleb128 0x7
 549 00b8 7C010000 		.4byte	.LASF11
 550 00bc 01       		.byte	0x1
 551 00bd 15       		.byte	0x15
 552 00be 68000000 		.4byte	0x68
 553 00c2 02       		.byte	0x2
 554 00c3 91       		.byte	0x91
 555 00c4 6C       		.sleb128 -20
 556 00c5 08       		.uleb128 0x8
 557 00c6 00000000 		.4byte	.LASF15
 558 00ca 01       		.byte	0x1
 559 00cb 16       		.byte	0x16
 560 00cc 68000000 		.4byte	0x68
 561 00d0 02       		.byte	0x2
 562 00d1 91       		.byte	0x91
 563 00d2 7C       		.sleb128 -4
ARM GAS  /tmp/cc521Km5.s 			page 13


 564 00d3 00       		.byte	0
 565 00d4 09       		.uleb128 0x9
 566 00d5 01       		.byte	0x1
 567 00d6 0C000000 		.4byte	.LASF13
 568 00da 01       		.byte	0x1
 569 00db 22       		.byte	0x22
 570 00dc 01       		.byte	0x1
 571 00dd 76000000 		.4byte	0x76
 572 00e1 34000000 		.4byte	.LFB1
 573 00e5 50000000 		.4byte	.LFE1
 574 00e9 20000000 		.4byte	.LLST1
 575 00ed 01       		.byte	0x1
 576 00ee 01010000 		.4byte	0x101
 577 00f2 07       		.uleb128 0x7
 578 00f3 8F000000 		.4byte	.LASF12
 579 00f7 01       		.byte	0x1
 580 00f8 22       		.byte	0x22
 581 00f9 68000000 		.4byte	0x68
 582 00fd 02       		.byte	0x2
 583 00fe 91       		.byte	0x91
 584 00ff 7C       		.sleb128 -4
 585 0100 00       		.byte	0
 586 0101 09       		.uleb128 0x9
 587 0102 01       		.byte	0x1
 588 0103 67000000 		.4byte	.LASF14
 589 0107 01       		.byte	0x1
 590 0108 28       		.byte	0x28
 591 0109 01       		.byte	0x1
 592 010a 4A010000 		.4byte	0x14a
 593 010e 50000000 		.4byte	.LFB2
 594 0112 84000000 		.4byte	.LFE2
 595 0116 40000000 		.4byte	.LLST2
 596 011a 01       		.byte	0x1
 597 011b 4A010000 		.4byte	0x14a
 598 011f 07       		.uleb128 0x7
 599 0120 8F000000 		.4byte	.LASF12
 600 0124 01       		.byte	0x1
 601 0125 28       		.byte	0x28
 602 0126 68000000 		.4byte	0x68
 603 012a 02       		.byte	0x2
 604 012b 91       		.byte	0x91
 605 012c 74       		.sleb128 -12
 606 012d 08       		.uleb128 0x8
 607 012e 60000000 		.4byte	.LASF16
 608 0132 01       		.byte	0x1
 609 0133 2A       		.byte	0x2a
 610 0134 68000000 		.4byte	0x68
 611 0138 02       		.byte	0x2
 612 0139 91       		.byte	0x91
 613 013a 7C       		.sleb128 -4
 614 013b 08       		.uleb128 0x8
 615 013c FE010000 		.4byte	.LASF17
 616 0140 01       		.byte	0x1
 617 0141 2A       		.byte	0x2a
 618 0142 68000000 		.4byte	0x68
 619 0146 02       		.byte	0x2
 620 0147 91       		.byte	0x91
ARM GAS  /tmp/cc521Km5.s 			page 14


 621 0148 78       		.sleb128 -8
 622 0149 00       		.byte	0
 623 014a 02       		.uleb128 0x2
 624 014b 01       		.byte	0x1
 625 014c 02       		.byte	0x2
 626 014d 0D020000 		.4byte	.LASF18
 627 0151 0A       		.uleb128 0xa
 628 0152 01       		.byte	0x1
 629 0153 76000000 		.4byte	.LASF32
 630 0157 01       		.byte	0x1
 631 0158 35       		.byte	0x35
 632 0159 01       		.byte	0x1
 633 015a 84000000 		.4byte	.LFB3
 634 015e 9C000000 		.4byte	.LFE3
 635 0162 02       		.byte	0x2
 636 0163 7D       		.byte	0x7d
 637 0164 00       		.sleb128 0
 638 0165 01       		.byte	0x1
 639 0166 0B       		.uleb128 0xb
 640 0167 01       		.byte	0x1
 641 0168 77010000 		.4byte	.LASF19
 642 016c 01       		.byte	0x1
 643 016d 44       		.byte	0x44
 644 016e 01       		.byte	0x1
 645 016f 68000000 		.4byte	0x68
 646 0173 9C000000 		.4byte	.LFB4
 647 0177 E0010000 		.4byte	.LFE4
 648 017b 60000000 		.4byte	.LLST3
 649 017f 01       		.byte	0x1
 650 0180 5D020000 		.4byte	0x25d
 651 0184 0C       		.uleb128 0xc
 652 0185 A0000000 		.4byte	.LBB2
 653 0189 D8010000 		.4byte	.LBE2
 654 018d 0D       		.uleb128 0xd
 655 018e 783100   		.ascii	"x1\000"
 656 0191 01       		.byte	0x1
 657 0192 49       		.byte	0x49
 658 0193 68000000 		.4byte	0x68
 659 0197 02       		.byte	0x2
 660 0198 91       		.byte	0x91
 661 0199 74       		.sleb128 -12
 662 019a 0D       		.uleb128 0xd
 663 019b 793100   		.ascii	"y1\000"
 664 019e 01       		.byte	0x1
 665 019f 4A       		.byte	0x4a
 666 01a0 68000000 		.4byte	0x68
 667 01a4 02       		.byte	0x2
 668 01a5 91       		.byte	0x91
 669 01a6 70       		.sleb128 -16
 670 01a7 0D       		.uleb128 0xd
 671 01a8 783200   		.ascii	"x2\000"
 672 01ab 01       		.byte	0x1
 673 01ac 4D       		.byte	0x4d
 674 01ad 68000000 		.4byte	0x68
 675 01b1 02       		.byte	0x2
 676 01b2 91       		.byte	0x91
 677 01b3 64       		.sleb128 -28
ARM GAS  /tmp/cc521Km5.s 			page 15


 678 01b4 0D       		.uleb128 0xd
 679 01b5 793200   		.ascii	"y2\000"
 680 01b8 01       		.byte	0x1
 681 01b9 4E       		.byte	0x4e
 682 01ba 68000000 		.4byte	0x68
 683 01be 02       		.byte	0x2
 684 01bf 91       		.byte	0x91
 685 01c0 60       		.sleb128 -32
 686 01c1 0D       		.uleb128 0xd
 687 01c2 783300   		.ascii	"x3\000"
 688 01c5 01       		.byte	0x1
 689 01c6 50       		.byte	0x50
 690 01c7 68000000 		.4byte	0x68
 691 01cb 02       		.byte	0x2
 692 01cc 91       		.byte	0x91
 693 01cd 5C       		.sleb128 -36
 694 01ce 0D       		.uleb128 0xd
 695 01cf 793300   		.ascii	"y3\000"
 696 01d2 01       		.byte	0x1
 697 01d3 51       		.byte	0x51
 698 01d4 68000000 		.4byte	0x68
 699 01d8 02       		.byte	0x2
 700 01d9 91       		.byte	0x91
 701 01da 58       		.sleb128 -40
 702 01db 08       		.uleb128 0x8
 703 01dc C6010000 		.4byte	.LASF20
 704 01e0 01       		.byte	0x1
 705 01e1 54       		.byte	0x54
 706 01e2 68000000 		.4byte	0x68
 707 01e6 02       		.byte	0x2
 708 01e7 91       		.byte	0x91
 709 01e8 54       		.sleb128 -44
 710 01e9 08       		.uleb128 0x8
 711 01ea 1A000000 		.4byte	.LASF21
 712 01ee 01       		.byte	0x1
 713 01ef 55       		.byte	0x55
 714 01f0 68000000 		.4byte	0x68
 715 01f4 02       		.byte	0x2
 716 01f5 91       		.byte	0x91
 717 01f6 50       		.sleb128 -48
 718 01f7 08       		.uleb128 0x8
 719 01f8 83010000 		.4byte	.LASF22
 720 01fc 01       		.byte	0x1
 721 01fd 56       		.byte	0x56
 722 01fe 68000000 		.4byte	0x68
 723 0202 02       		.byte	0x2
 724 0203 91       		.byte	0x91
 725 0204 4C       		.sleb128 -52
 726 0205 08       		.uleb128 0x8
 727 0206 60010000 		.4byte	.LASF23
 728 020a 01       		.byte	0x1
 729 020b 58       		.byte	0x58
 730 020c 68000000 		.4byte	0x68
 731 0210 02       		.byte	0x2
 732 0211 91       		.byte	0x91
 733 0212 48       		.sleb128 -56
 734 0213 08       		.uleb128 0x8
ARM GAS  /tmp/cc521Km5.s 			page 16


 735 0214 94000000 		.4byte	.LASF24
 736 0218 01       		.byte	0x1
 737 0219 58       		.byte	0x58
 738 021a 68000000 		.4byte	0x68
 739 021e 02       		.byte	0x2
 740 021f 91       		.byte	0x91
 741 0220 44       		.sleb128 -60
 742 0221 08       		.uleb128 0x8
 743 0222 22000000 		.4byte	.LASF25
 744 0226 01       		.byte	0x1
 745 0227 58       		.byte	0x58
 746 0228 68000000 		.4byte	0x68
 747 022c 02       		.byte	0x2
 748 022d 91       		.byte	0x91
 749 022e 40       		.sleb128 -64
 750 022f 0C       		.uleb128 0xc
 751 0230 E4000000 		.4byte	.LBB3
 752 0234 D8010000 		.4byte	.LBE3
 753 0238 0D       		.uleb128 0xd
 754 0239 7800     		.ascii	"x\000"
 755 023b 01       		.byte	0x1
 756 023c 64       		.byte	0x64
 757 023d 68000000 		.4byte	0x68
 758 0241 02       		.byte	0x2
 759 0242 91       		.byte	0x91
 760 0243 6C       		.sleb128 -20
 761 0244 0C       		.uleb128 0xc
 762 0245 EA000000 		.4byte	.LBB4
 763 0249 CA010000 		.4byte	.LBE4
 764 024d 0D       		.uleb128 0xd
 765 024e 7900     		.ascii	"y\000"
 766 0250 01       		.byte	0x1
 767 0251 65       		.byte	0x65
 768 0252 68000000 		.4byte	0x68
 769 0256 02       		.byte	0x2
 770 0257 91       		.byte	0x91
 771 0258 68       		.sleb128 -24
 772 0259 00       		.byte	0
 773 025a 00       		.byte	0
 774 025b 00       		.byte	0
 775 025c 00       		.byte	0
 776 025d 0E       		.uleb128 0xe
 777 025e EA010000 		.4byte	.LASF26
 778 0262 01       		.byte	0x1
 779 0263 0D       		.byte	0xd
 780 0264 6F020000 		.4byte	0x26f
 781 0268 01       		.byte	0x1
 782 0269 05       		.byte	0x5
 783 026a 03       		.byte	0x3
 784 026b 00000000 		.4byte	SW_REGS
 785 026f 0F       		.uleb128 0xf
 786 0270 04       		.byte	0x4
 787 0271 75020000 		.4byte	0x275
 788 0275 10       		.uleb128 0x10
 789 0276 76000000 		.4byte	0x76
 790 027a 0E       		.uleb128 0xe
 791 027b 57010000 		.4byte	.LASF27
ARM GAS  /tmp/cc521Km5.s 			page 17


 792 027f 01       		.byte	0x1
 793 0280 0E       		.byte	0xe
 794 0281 6F020000 		.4byte	0x26f
 795 0285 01       		.byte	0x1
 796 0286 05       		.byte	0x5
 797 0287 03       		.byte	0x3
 798 0288 00000000 		.4byte	PIX_REGS
 799 028c 00       		.byte	0
 800              		.section	.debug_abbrev,"",%progbits
 801              	.Ldebug_abbrev0:
 802 0000 01       		.uleb128 0x1
 803 0001 11       		.uleb128 0x11
 804 0002 01       		.byte	0x1
 805 0003 25       		.uleb128 0x25
 806 0004 0E       		.uleb128 0xe
 807 0005 13       		.uleb128 0x13
 808 0006 0B       		.uleb128 0xb
 809 0007 03       		.uleb128 0x3
 810 0008 0E       		.uleb128 0xe
 811 0009 1B       		.uleb128 0x1b
 812 000a 0E       		.uleb128 0xe
 813 000b 11       		.uleb128 0x11
 814 000c 01       		.uleb128 0x1
 815 000d 12       		.uleb128 0x12
 816 000e 01       		.uleb128 0x1
 817 000f 10       		.uleb128 0x10
 818 0010 06       		.uleb128 0x6
 819 0011 00       		.byte	0
 820 0012 00       		.byte	0
 821 0013 02       		.uleb128 0x2
 822 0014 24       		.uleb128 0x24
 823 0015 00       		.byte	0
 824 0016 0B       		.uleb128 0xb
 825 0017 0B       		.uleb128 0xb
 826 0018 3E       		.uleb128 0x3e
 827 0019 0B       		.uleb128 0xb
 828 001a 03       		.uleb128 0x3
 829 001b 0E       		.uleb128 0xe
 830 001c 00       		.byte	0
 831 001d 00       		.byte	0
 832 001e 03       		.uleb128 0x3
 833 001f 16       		.uleb128 0x16
 834 0020 00       		.byte	0
 835 0021 03       		.uleb128 0x3
 836 0022 0E       		.uleb128 0xe
 837 0023 3A       		.uleb128 0x3a
 838 0024 0B       		.uleb128 0xb
 839 0025 3B       		.uleb128 0x3b
 840 0026 0B       		.uleb128 0xb
 841 0027 49       		.uleb128 0x49
 842 0028 13       		.uleb128 0x13
 843 0029 00       		.byte	0
 844 002a 00       		.byte	0
 845 002b 04       		.uleb128 0x4
 846 002c 24       		.uleb128 0x24
 847 002d 00       		.byte	0
 848 002e 0B       		.uleb128 0xb
ARM GAS  /tmp/cc521Km5.s 			page 18


 849 002f 0B       		.uleb128 0xb
 850 0030 3E       		.uleb128 0x3e
 851 0031 0B       		.uleb128 0xb
 852 0032 03       		.uleb128 0x3
 853 0033 08       		.uleb128 0x8
 854 0034 00       		.byte	0
 855 0035 00       		.byte	0
 856 0036 05       		.uleb128 0x5
 857 0037 2E       		.uleb128 0x2e
 858 0038 01       		.byte	0x1
 859 0039 3F       		.uleb128 0x3f
 860 003a 0C       		.uleb128 0xc
 861 003b 03       		.uleb128 0x3
 862 003c 0E       		.uleb128 0xe
 863 003d 3A       		.uleb128 0x3a
 864 003e 0B       		.uleb128 0xb
 865 003f 3B       		.uleb128 0x3b
 866 0040 0B       		.uleb128 0xb
 867 0041 27       		.uleb128 0x27
 868 0042 0C       		.uleb128 0xc
 869 0043 11       		.uleb128 0x11
 870 0044 01       		.uleb128 0x1
 871 0045 12       		.uleb128 0x12
 872 0046 01       		.uleb128 0x1
 873 0047 40       		.uleb128 0x40
 874 0048 06       		.uleb128 0x6
 875 0049 9742     		.uleb128 0x2117
 876 004b 0C       		.uleb128 0xc
 877 004c 01       		.uleb128 0x1
 878 004d 13       		.uleb128 0x13
 879 004e 00       		.byte	0
 880 004f 00       		.byte	0
 881 0050 06       		.uleb128 0x6
 882 0051 05       		.uleb128 0x5
 883 0052 00       		.byte	0
 884 0053 03       		.uleb128 0x3
 885 0054 08       		.uleb128 0x8
 886 0055 3A       		.uleb128 0x3a
 887 0056 0B       		.uleb128 0xb
 888 0057 3B       		.uleb128 0x3b
 889 0058 0B       		.uleb128 0xb
 890 0059 49       		.uleb128 0x49
 891 005a 13       		.uleb128 0x13
 892 005b 02       		.uleb128 0x2
 893 005c 0A       		.uleb128 0xa
 894 005d 00       		.byte	0
 895 005e 00       		.byte	0
 896 005f 07       		.uleb128 0x7
 897 0060 05       		.uleb128 0x5
 898 0061 00       		.byte	0
 899 0062 03       		.uleb128 0x3
 900 0063 0E       		.uleb128 0xe
 901 0064 3A       		.uleb128 0x3a
 902 0065 0B       		.uleb128 0xb
 903 0066 3B       		.uleb128 0x3b
 904 0067 0B       		.uleb128 0xb
 905 0068 49       		.uleb128 0x49
ARM GAS  /tmp/cc521Km5.s 			page 19


 906 0069 13       		.uleb128 0x13
 907 006a 02       		.uleb128 0x2
 908 006b 0A       		.uleb128 0xa
 909 006c 00       		.byte	0
 910 006d 00       		.byte	0
 911 006e 08       		.uleb128 0x8
 912 006f 34       		.uleb128 0x34
 913 0070 00       		.byte	0
 914 0071 03       		.uleb128 0x3
 915 0072 0E       		.uleb128 0xe
 916 0073 3A       		.uleb128 0x3a
 917 0074 0B       		.uleb128 0xb
 918 0075 3B       		.uleb128 0x3b
 919 0076 0B       		.uleb128 0xb
 920 0077 49       		.uleb128 0x49
 921 0078 13       		.uleb128 0x13
 922 0079 02       		.uleb128 0x2
 923 007a 0A       		.uleb128 0xa
 924 007b 00       		.byte	0
 925 007c 00       		.byte	0
 926 007d 09       		.uleb128 0x9
 927 007e 2E       		.uleb128 0x2e
 928 007f 01       		.byte	0x1
 929 0080 3F       		.uleb128 0x3f
 930 0081 0C       		.uleb128 0xc
 931 0082 03       		.uleb128 0x3
 932 0083 0E       		.uleb128 0xe
 933 0084 3A       		.uleb128 0x3a
 934 0085 0B       		.uleb128 0xb
 935 0086 3B       		.uleb128 0x3b
 936 0087 0B       		.uleb128 0xb
 937 0088 27       		.uleb128 0x27
 938 0089 0C       		.uleb128 0xc
 939 008a 49       		.uleb128 0x49
 940 008b 13       		.uleb128 0x13
 941 008c 11       		.uleb128 0x11
 942 008d 01       		.uleb128 0x1
 943 008e 12       		.uleb128 0x12
 944 008f 01       		.uleb128 0x1
 945 0090 40       		.uleb128 0x40
 946 0091 06       		.uleb128 0x6
 947 0092 9742     		.uleb128 0x2117
 948 0094 0C       		.uleb128 0xc
 949 0095 01       		.uleb128 0x1
 950 0096 13       		.uleb128 0x13
 951 0097 00       		.byte	0
 952 0098 00       		.byte	0
 953 0099 0A       		.uleb128 0xa
 954 009a 2E       		.uleb128 0x2e
 955 009b 00       		.byte	0
 956 009c 3F       		.uleb128 0x3f
 957 009d 0C       		.uleb128 0xc
 958 009e 03       		.uleb128 0x3
 959 009f 0E       		.uleb128 0xe
 960 00a0 3A       		.uleb128 0x3a
 961 00a1 0B       		.uleb128 0xb
 962 00a2 3B       		.uleb128 0x3b
ARM GAS  /tmp/cc521Km5.s 			page 20


 963 00a3 0B       		.uleb128 0xb
 964 00a4 27       		.uleb128 0x27
 965 00a5 0C       		.uleb128 0xc
 966 00a6 11       		.uleb128 0x11
 967 00a7 01       		.uleb128 0x1
 968 00a8 12       		.uleb128 0x12
 969 00a9 01       		.uleb128 0x1
 970 00aa 40       		.uleb128 0x40
 971 00ab 0A       		.uleb128 0xa
 972 00ac 9742     		.uleb128 0x2117
 973 00ae 0C       		.uleb128 0xc
 974 00af 00       		.byte	0
 975 00b0 00       		.byte	0
 976 00b1 0B       		.uleb128 0xb
 977 00b2 2E       		.uleb128 0x2e
 978 00b3 01       		.byte	0x1
 979 00b4 3F       		.uleb128 0x3f
 980 00b5 0C       		.uleb128 0xc
 981 00b6 03       		.uleb128 0x3
 982 00b7 0E       		.uleb128 0xe
 983 00b8 3A       		.uleb128 0x3a
 984 00b9 0B       		.uleb128 0xb
 985 00ba 3B       		.uleb128 0x3b
 986 00bb 0B       		.uleb128 0xb
 987 00bc 27       		.uleb128 0x27
 988 00bd 0C       		.uleb128 0xc
 989 00be 49       		.uleb128 0x49
 990 00bf 13       		.uleb128 0x13
 991 00c0 11       		.uleb128 0x11
 992 00c1 01       		.uleb128 0x1
 993 00c2 12       		.uleb128 0x12
 994 00c3 01       		.uleb128 0x1
 995 00c4 40       		.uleb128 0x40
 996 00c5 06       		.uleb128 0x6
 997 00c6 9642     		.uleb128 0x2116
 998 00c8 0C       		.uleb128 0xc
 999 00c9 01       		.uleb128 0x1
 1000 00ca 13       		.uleb128 0x13
 1001 00cb 00       		.byte	0
 1002 00cc 00       		.byte	0
 1003 00cd 0C       		.uleb128 0xc
 1004 00ce 0B       		.uleb128 0xb
 1005 00cf 01       		.byte	0x1
 1006 00d0 11       		.uleb128 0x11
 1007 00d1 01       		.uleb128 0x1
 1008 00d2 12       		.uleb128 0x12
 1009 00d3 01       		.uleb128 0x1
 1010 00d4 00       		.byte	0
 1011 00d5 00       		.byte	0
 1012 00d6 0D       		.uleb128 0xd
 1013 00d7 34       		.uleb128 0x34
 1014 00d8 00       		.byte	0
 1015 00d9 03       		.uleb128 0x3
 1016 00da 08       		.uleb128 0x8
 1017 00db 3A       		.uleb128 0x3a
 1018 00dc 0B       		.uleb128 0xb
 1019 00dd 3B       		.uleb128 0x3b
ARM GAS  /tmp/cc521Km5.s 			page 21


 1020 00de 0B       		.uleb128 0xb
 1021 00df 49       		.uleb128 0x49
 1022 00e0 13       		.uleb128 0x13
 1023 00e1 02       		.uleb128 0x2
 1024 00e2 0A       		.uleb128 0xa
 1025 00e3 00       		.byte	0
 1026 00e4 00       		.byte	0
 1027 00e5 0E       		.uleb128 0xe
 1028 00e6 34       		.uleb128 0x34
 1029 00e7 00       		.byte	0
 1030 00e8 03       		.uleb128 0x3
 1031 00e9 0E       		.uleb128 0xe
 1032 00ea 3A       		.uleb128 0x3a
 1033 00eb 0B       		.uleb128 0xb
 1034 00ec 3B       		.uleb128 0x3b
 1035 00ed 0B       		.uleb128 0xb
 1036 00ee 49       		.uleb128 0x49
 1037 00ef 13       		.uleb128 0x13
 1038 00f0 3F       		.uleb128 0x3f
 1039 00f1 0C       		.uleb128 0xc
 1040 00f2 02       		.uleb128 0x2
 1041 00f3 0A       		.uleb128 0xa
 1042 00f4 00       		.byte	0
 1043 00f5 00       		.byte	0
 1044 00f6 0F       		.uleb128 0xf
 1045 00f7 0F       		.uleb128 0xf
 1046 00f8 00       		.byte	0
 1047 00f9 0B       		.uleb128 0xb
 1048 00fa 0B       		.uleb128 0xb
 1049 00fb 49       		.uleb128 0x49
 1050 00fc 13       		.uleb128 0x13
 1051 00fd 00       		.byte	0
 1052 00fe 00       		.byte	0
 1053 00ff 10       		.uleb128 0x10
 1054 0100 35       		.uleb128 0x35
 1055 0101 00       		.byte	0
 1056 0102 49       		.uleb128 0x49
 1057 0103 13       		.uleb128 0x13
 1058 0104 00       		.byte	0
 1059 0105 00       		.byte	0
 1060 0106 00       		.byte	0
 1061              		.section	.debug_loc,"",%progbits
 1062              	.Ldebug_loc0:
 1063              	.LLST0:
 1064 0000 00000000 		.4byte	.LFB0-.Ltext0
 1065 0004 02000000 		.4byte	.LCFI0-.Ltext0
 1066 0008 0200     		.2byte	0x2
 1067 000a 7D       		.byte	0x7d
 1068 000b 00       		.sleb128 0
 1069 000c 02000000 		.4byte	.LCFI0-.Ltext0
 1070 0010 34000000 		.4byte	.LFE0-.Ltext0
 1071 0014 0200     		.2byte	0x2
 1072 0016 7D       		.byte	0x7d
 1073 0017 18       		.sleb128 24
 1074 0018 00000000 		.4byte	0
 1075 001c 00000000 		.4byte	0
 1076              	.LLST1:
ARM GAS  /tmp/cc521Km5.s 			page 22


 1077 0020 34000000 		.4byte	.LFB1-.Ltext0
 1078 0024 36000000 		.4byte	.LCFI1-.Ltext0
 1079 0028 0200     		.2byte	0x2
 1080 002a 7D       		.byte	0x7d
 1081 002b 00       		.sleb128 0
 1082 002c 36000000 		.4byte	.LCFI1-.Ltext0
 1083 0030 50000000 		.4byte	.LFE1-.Ltext0
 1084 0034 0200     		.2byte	0x2
 1085 0036 7D       		.byte	0x7d
 1086 0037 08       		.sleb128 8
 1087 0038 00000000 		.4byte	0
 1088 003c 00000000 		.4byte	0
 1089              	.LLST2:
 1090 0040 50000000 		.4byte	.LFB2-.Ltext0
 1091 0044 52000000 		.4byte	.LCFI2-.Ltext0
 1092 0048 0200     		.2byte	0x2
 1093 004a 7D       		.byte	0x7d
 1094 004b 00       		.sleb128 0
 1095 004c 52000000 		.4byte	.LCFI2-.Ltext0
 1096 0050 84000000 		.4byte	.LFE2-.Ltext0
 1097 0054 0200     		.2byte	0x2
 1098 0056 7D       		.byte	0x7d
 1099 0057 10       		.sleb128 16
 1100 0058 00000000 		.4byte	0
 1101 005c 00000000 		.4byte	0
 1102              	.LLST3:
 1103 0060 9C000000 		.4byte	.LFB4-.Ltext0
 1104 0064 9E000000 		.4byte	.LCFI3-.Ltext0
 1105 0068 0200     		.2byte	0x2
 1106 006a 7D       		.byte	0x7d
 1107 006b 00       		.sleb128 0
 1108 006c 9E000000 		.4byte	.LCFI3-.Ltext0
 1109 0070 A0000000 		.4byte	.LCFI4-.Ltext0
 1110 0074 0200     		.2byte	0x2
 1111 0076 7D       		.byte	0x7d
 1112 0077 04       		.sleb128 4
 1113 0078 A0000000 		.4byte	.LCFI4-.Ltext0
 1114 007c E0010000 		.4byte	.LFE4-.Ltext0
 1115 0080 0300     		.2byte	0x3
 1116 0082 7D       		.byte	0x7d
 1117 0083 C000     		.sleb128 64
 1118 0085 00000000 		.4byte	0
 1119 0089 00000000 		.4byte	0
 1120              		.section	.debug_aranges,"",%progbits
 1121 0000 1C000000 		.4byte	0x1c
 1122 0004 0200     		.2byte	0x2
 1123 0006 00000000 		.4byte	.Ldebug_info0
 1124 000a 04       		.byte	0x4
 1125 000b 00       		.byte	0
 1126 000c 0000     		.2byte	0
 1127 000e 0000     		.2byte	0
 1128 0010 00000000 		.4byte	.Ltext0
 1129 0014 E0010000 		.4byte	.Letext0-.Ltext0
 1130 0018 00000000 		.4byte	0
 1131 001c 00000000 		.4byte	0
 1132              		.section	.debug_line,"",%progbits
 1133              	.Ldebug_line0:
ARM GAS  /tmp/cc521Km5.s 			page 23


 1134 0000 2D010000 		.section	.debug_str,"MS",%progbits,1
 1134      0200BF00 
 1134      00000201 
 1134      FB0E0D00 
 1134      01010101 
 1135              	.LASF15:
 1136 0000 7069785F 		.ascii	"pix_address\000"
 1136      61646472 
 1136      65737300 
 1137              	.LASF13:
 1138 000c 72656164 		.ascii	"read_switches\000"
 1138      5F737769 
 1138      74636865 
 1138      7300
 1139              	.LASF21:
 1140 001a 4C325F64 		.ascii	"L2_detT\000"
 1140      65745400 
 1141              	.LASF25:
 1142 0022 4C335F70 		.ascii	"L3_positive\000"
 1142      6F736974 
 1142      69766500 
 1143              	.LASF30:
 1144 002e 2F686F6D 		.ascii	"/home/ks6n19/Documents/project/software\000"
 1144      652F6B73 
 1144      366E3139 
 1144      2F446F63 
 1144      756D656E 
 1145              	.LASF31:
 1146 0056 77726974 		.ascii	"write_pix\000"
 1146      655F7069 
 1146      7800
 1147              	.LASF16:
 1148 0060 73746174 		.ascii	"status\000"
 1148      757300
 1149              	.LASF14:
 1150 0067 63686563 		.ascii	"check_switches\000"
 1150      6B5F7377 
 1150      69746368 
 1150      657300
 1151              	.LASF32:
 1152 0076 77616974 		.ascii	"wait_for_any_switch_data\000"
 1152      5F666F72 
 1152      5F616E79 
 1152      5F737769 
 1152      7463685F 
 1153              	.LASF12:
 1154 008f 61646472 		.ascii	"addr\000"
 1154      00
 1155              	.LASF24:
 1156 0094 4C325F70 		.ascii	"L2_positive\000"
 1156      6F736974 
 1156      69766500 
 1157              	.LASF28:
 1158 00a0 474E5520 		.ascii	"GNU C11 5.4.1 20160919 (release) [ARM/embedded-5-br"
 1158      43313120 
 1158      352E342E 
 1158      31203230 
ARM GAS  /tmp/cc521Km5.s 			page 24


 1158      31363039 
 1159 00d3 616E6368 		.ascii	"anch revision 240496] -mcpu=cortex-m0 -mthumb -gdwa"
 1159      20726576 
 1159      6973696F 
 1159      6E203234 
 1159      30343936 
 1160 0106 72662D32 		.ascii	"rf-2 -O0 -fomit-frame-pointer\000"
 1160      202D4F30 
 1160      202D666F 
 1160      6D69742D 
 1160      6672616D 
 1161              	.LASF1:
 1162 0124 756E7369 		.ascii	"unsigned char\000"
 1162      676E6564 
 1162      20636861 
 1162      7200
 1163              	.LASF5:
 1164 0132 6C6F6E67 		.ascii	"long unsigned int\000"
 1164      20756E73 
 1164      69676E65 
 1164      6420696E 
 1164      7400
 1165              	.LASF3:
 1166 0144 73686F72 		.ascii	"short unsigned int\000"
 1166      7420756E 
 1166      7369676E 
 1166      65642069 
 1166      6E7400
 1167              	.LASF27:
 1168 0157 5049585F 		.ascii	"PIX_REGS\000"
 1168      52454753 
 1168      00
 1169              	.LASF23:
 1170 0160 4C315F70 		.ascii	"L1_positive\000"
 1170      6F736974 
 1170      69766500 
 1171              	.LASF9:
 1172 016c 5F5F7569 		.ascii	"__uint16_t\000"
 1172      6E743136 
 1172      5F7400
 1173              	.LASF19:
 1174 0177 6D61696E 		.ascii	"main\000"
 1174      00
 1175              	.LASF11:
 1176 017c 636F6C6F 		.ascii	"colour\000"
 1176      757200
 1177              	.LASF22:
 1178 0183 64657454 		.ascii	"detT\000"
 1178      00
 1179              	.LASF8:
 1180 0188 756E7369 		.ascii	"unsigned int\000"
 1180      676E6564 
 1180      20696E74 
 1180      00
 1181              	.LASF7:
 1182 0195 6C6F6E67 		.ascii	"long long unsigned int\000"
 1182      206C6F6E 
ARM GAS  /tmp/cc521Km5.s 			page 25


 1182      6720756E 
 1182      7369676E 
 1182      65642069 
 1183              	.LASF6:
 1184 01ac 6C6F6E67 		.ascii	"long long int\000"
 1184      206C6F6E 
 1184      6720696E 
 1184      7400
 1185              	.LASF29:
 1186 01ba 636F6465 		.ascii	"code/main.c\000"
 1186      2F6D6169 
 1186      6E2E6300 
 1187              	.LASF20:
 1188 01c6 4C315F64 		.ascii	"L1_detT\000"
 1188      65745400 
 1189              	.LASF2:
 1190 01ce 73686F72 		.ascii	"short int\000"
 1190      7420696E 
 1190      7400
 1191              	.LASF10:
 1192 01d8 75696E74 		.ascii	"uint16_t\000"
 1192      31365F74 
 1192      00
 1193              	.LASF4:
 1194 01e1 6C6F6E67 		.ascii	"long int\000"
 1194      20696E74 
 1194      00
 1195              	.LASF26:
 1196 01ea 53575F52 		.ascii	"SW_REGS\000"
 1196      45475300 
 1197              	.LASF0:
 1198 01f2 7369676E 		.ascii	"signed char\000"
 1198      65642063 
 1198      68617200 
 1199              	.LASF17:
 1200 01fe 73776974 		.ascii	"switches_ready\000"
 1200      63686573 
 1200      5F726561 
 1200      647900
 1201              	.LASF18:
 1202 020d 5F426F6F 		.ascii	"_Bool\000"
 1202      6C00
 1203              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160919 (release) [ARM/embedded-5-bran
ARM GAS  /tmp/cc521Km5.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/cc521Km5.s:57     .data:00000000 SW_REGS
     /tmp/cc521Km5.s:54     .data:00000000 $d
     /tmp/cc521Km5.s:63     .data:00000004 PIX_REGS
     /tmp/cc521Km5.s:66     .text:00000000 $t
     /tmp/cc521Km5.s:71     .text:00000000 write_pix
     /tmp/cc521Km5.s:112    .text:00000030 $d
     /tmp/cc521Km5.s:116    .text:00000034 $t
     /tmp/cc521Km5.s:121    .text:00000034 read_switches
     /tmp/cc521Km5.s:148    .text:0000004c $d
     /tmp/cc521Km5.s:152    .text:00000050 $t
     /tmp/cc521Km5.s:157    .text:00000050 check_switches
     /tmp/cc521Km5.s:197    .text:00000080 $d
     /tmp/cc521Km5.s:201    .text:00000084 $t
     /tmp/cc521Km5.s:206    .text:00000084 wait_for_any_switch_data
     /tmp/cc521Km5.s:232    .text:00000098 $d
     /tmp/cc521Km5.s:236    .text:0000009c $t
     /tmp/cc521Km5.s:241    .text:0000009c main
     /tmp/cc521Km5.s:450    .text:000001dc $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
